{"id":"fd1645c0010d34f3febf81cda14dea8e","_format":"hh-sol-build-info-1","solcVersion":"0.8.12","solcLongVersion":"0.8.12","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC721.sol\";\nimport \"./IERC721Receiver.sol\";\nimport \"./extensions/IERC721Metadata.sol\";\nimport \"../../utils/Address.sol\";\nimport \"../../utils/Context.sol\";\nimport \"../../utils/Strings.sol\";\nimport \"../../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\n    using Address for address;\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    // Mapping from token ID to owner address\n    mapping(uint256 => address) private _owners;\n\n    // Mapping owner address to token count\n    mapping(address => uint256) private _balances;\n\n    // Mapping from token ID to approved address\n    mapping(uint256 => address) private _tokenApprovals;\n\n    // Mapping from owner to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual override returns (uint256) {\n        require(owner != address(0), \"ERC721: address zero is not a valid owner\");\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\n        address owner = _ownerOf(tokenId);\n        require(owner != address(0), \"ERC721: invalid token ID\");\n        return owner;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        _requireMinted(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual override {\n        address owner = ERC721.ownerOf(tokenId);\n        require(to != owner, \"ERC721: approval to current owner\");\n\n        require(\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\n            \"ERC721: approve caller is not token owner or approved for all\"\n        );\n\n        _approve(to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\n        _requireMinted(tokenId);\n\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) public virtual override {\n        //solhint-disable-next-line max-line-length\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\");\n\n        _transfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) public virtual override {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual override {\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\");\n        _safeTransfer(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\n        _transfer(from, to, tokenId);\n        require(_checkOnERC721Received(from, to, tokenId, data), \"ERC721: transfer to non ERC721Receiver implementer\");\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `tokenId` exists.\n     *\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n     *\n     * Tokens start existing when they are minted (`_mint`),\n     * and stop existing when they are burned (`_burn`).\n     */\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\n        return _ownerOf(tokenId) != address(0);\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\n        address owner = ERC721.ownerOf(tokenId);\n        return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Safely mints `tokenId` and transfers it to `to`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal virtual {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\n        _mint(to, tokenId);\n        require(\n            _checkOnERC721Received(address(0), to, tokenId, data),\n            \"ERC721: transfer to non ERC721Receiver implementer\"\n        );\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal virtual {\n        require(to != address(0), \"ERC721: mint to the zero address\");\n        require(!_exists(tokenId), \"ERC721: token already minted\");\n\n        _beforeTokenTransfer(address(0), to, tokenId, 1);\n\n        // Check that tokenId was not minted by `_beforeTokenTransfer` hook\n        require(!_exists(tokenId), \"ERC721: token already minted\");\n\n        unchecked {\n            // Will not overflow unless all 2**256 token ids are minted to the same owner.\n            // Given that tokens are minted one by one, it is impossible in practice that\n            // this ever happens. Might change if we allow batch minting.\n            // The ERC fails to describe this case.\n            _balances[to] += 1;\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(address(0), to, tokenId);\n\n        _afterTokenTransfer(address(0), to, tokenId, 1);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal virtual {\n        address owner = ERC721.ownerOf(tokenId);\n\n        _beforeTokenTransfer(owner, address(0), tokenId, 1);\n\n        // Update ownership in case tokenId was transferred by `_beforeTokenTransfer` hook\n        owner = ERC721.ownerOf(tokenId);\n\n        // Clear approvals\n        delete _tokenApprovals[tokenId];\n\n        unchecked {\n            // Cannot overflow, as that would require more tokens to be burned/transferred\n            // out than the owner initially received through minting and transferring in.\n            _balances[owner] -= 1;\n        }\n        delete _owners[tokenId];\n\n        emit Transfer(owner, address(0), tokenId);\n\n        _afterTokenTransfer(owner, address(0), tokenId, 1);\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal virtual {\n        require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\");\n        require(to != address(0), \"ERC721: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, tokenId, 1);\n\n        // Check that tokenId was not transferred by `_beforeTokenTransfer` hook\n        require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\");\n\n        // Clear approvals from the previous owner\n        delete _tokenApprovals[tokenId];\n\n        unchecked {\n            // `_balances[from]` cannot overflow for the same reason as described in `_burn`:\n            // `from`'s balance is the number of token held, which is at least one before the current\n            // transfer.\n            // `_balances[to]` could overflow in the conditions described in `_mint`. That would require\n            // all 2**256 token ids to be minted, which in practice is impossible.\n            _balances[from] -= 1;\n            _balances[to] += 1;\n        }\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        _afterTokenTransfer(from, to, tokenId, 1);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * Emits an {Approval} event.\n     */\n    function _approve(address to, uint256 tokenId) internal virtual {\n        _tokenApprovals[tokenId] = to;\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        require(owner != operator, \"ERC721: approve to caller\");\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` has not been minted yet.\n     */\n    function _requireMinted(uint256 tokenId) internal view virtual {\n        require(_exists(tokenId), \"ERC721: invalid token ID\");\n    }\n\n    /**\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n     * The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param data bytes optional data to send along with the call\n     * @return bool whether the call correctly returned the expected magic value\n     */\n    function _checkOnERC721Received(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) private returns (bool) {\n        if (to.isContract()) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\n                return retval == IERC721Receiver.onERC721Received.selector;\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert(\"ERC721: transfer to non ERC721Receiver implementer\");\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        } else {\n            return true;\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s tokens will be transferred to `to`.\n     * - When `from` is zero, the tokens will be minted for `to`.\n     * - When `to` is zero, ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     * - `batchSize` is non-zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(address from, address to, uint256 firstTokenId, uint256 batchSize) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s tokens were transferred to `to`.\n     * - When `from` is zero, the tokens were minted for `to`.\n     * - When `to` is zero, ``from``'s tokens were burned.\n     * - `from` and `to` are never both zero.\n     * - `batchSize` is non-zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(address from, address to, uint256 firstTokenId, uint256 batchSize) internal virtual {}\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * WARNING: Anyone calling this MUST ensure that the balances remain consistent with the ownership. The invariant\n     * being that for any address `a` the value returned by `balanceOf(a)` must be equal to the number of tokens such\n     * that `ownerOf(tokenId)` is `a`.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function __unsafe_increaseBalance(address account, uint256 amount) internal {\n        _balances[account] += amount;\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     *\n     * Furthermore, `isContract` will also return true if the target contract within\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n     * which only has an effect at the end of a transaction.\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1, \"Math: mulDiv overflow\");\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/Math.sol\";\nimport \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toString(int256 value) internal pure returns (string memory) {\n        return string(abi.encodePacked(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value))));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"},"contracts/QuestNFT/QuestNFT.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\n\ncontract QuestNFT is ERC721, Ownable {\n    using Strings for uint256;\n\n    uint public constant MAX_TOKENS = 10000;\n    uint public constant MAX_TOKEN_PER_WALLET = 1;\n    uint private constant TOKENS_RESERVED = 5;\n    uint public price = 0;\n\n    bool public isSaleActive;\n    uint256 public totalSupply;\n    mapping(address => uint256) private mintedPerWallet;\n\n    string public baseUri;\n    string public baseExtension = \".json\";\n\n    constructor() ERC721(\"QuestNFT\", \"QUEST\") {\n        baseUri = \"ipfs://xxxxxxxxxxxxxxxxxxxxxxxxxxxxx/\";\n        for(uint256 i = 1; i <= TOKENS_RESERVED; ++i) {\n            _safeMint(msg.sender, i);\n        }\n        totalSupply = TOKENS_RESERVED;\n    }\n\n    // Public Functions\n    function mint() external payable {\n        require(isSaleActive, \"The sale is paused.\");\n        require(mintedPerWallet[msg.sender] < MAX_TOKEN_PER_WALLET, \"You already have this quest token\");\n        uint256 curTotalSupply = totalSupply;\n        require(curTotalSupply + 1 <= MAX_TOKENS, \"Exceeds total supply.\");\n        require(price <= msg.value, \"Insufficient funds.\");\n\n        _safeMint(msg.sender, curTotalSupply+1);\n        mintedPerWallet[msg.sender]++;\n        totalSupply++;\n    }\n\n    // Owner-only functions\n\n    function launch_quest() external onlyOwner {\n        isSaleActive = true;\n    }\n\n    function close_quest() external onlyOwner {\n        isSaleActive = false;\n    }\n\n    function setBaseUri(string memory _baseUri) external onlyOwner {\n        baseUri = _baseUri;\n    }\n\n    function setPrice(uint256 _price) external onlyOwner {\n        price = _price;\n    }\n\n    function withdrawAll() external payable onlyOwner {\n        uint256 balance = address(this).balance;\n        uint256 balanceOne = balance * 70 / 100;\n        uint256 balanceTwo = balance * 30 / 100;\n        ( bool transferOne, ) = payable(0x7ceB3cAf7cA83D837F9d04c59f41a92c1dC71C7d).call{value: balanceOne}(\"\");\n        ( bool transferTwo, ) = payable(0x7ceB3cAf7cA83D837F9d04c59f41a92c1dC71C7d).call{value: balanceTwo}(\"\");\n        require(transferOne && transferTwo, \"Transfer failed.\");\n    }\n\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        require(_exists(tokenId), \"ERC721Metadata: URI query for nonexistent token\");\n \n        string memory currentBaseURI = _baseURI();\n        return bytes(currentBaseURI).length > 0\n            ? string(abi.encodePacked(currentBaseURI, tokenId.toString(), baseExtension))\n            : \"\";\n    }\n \n    function _baseURI() internal view virtual override returns (string memory) {\n        return baseUri;\n    }\n}"}},"settings":{"optimizer":{"enabled":true},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"errors":[],"version":"0.8.16","zk_version":"1.1.6","sources":{},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}]}},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"ERC721":{"abi":[{"inputs":[{"internalType":"string","name":"name_","type":"string"},{"internalType":"string","name":"symbol_","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"legacyAssembly":null,"bytecode":{"object":""}},"factoryDependencies":{},"hash":"03ffb7dfbee300dc2e54abf9a289f89674441f4139f2d61d30c71f287b9aed35"}},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"IERC721":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}]}},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"IERC721Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"}]}},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"IERC721Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}]}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[],"evm":{"legacyAssembly":null,"bytecode":{"object":"00000024011001970000002504000041000000000014037600000026010000410000000000210376000000000130004c000000080000613d008b00090000034f008b00200000034f0000008001000039000000400200003900000000001203760000000001000357000000000110004c0000001e0000c13d00000026010000410000000001010375000000000110004c000000170000c13d000000800100003900000000020000190000000003000019008b007c0000034f0000002001000039000000270200004100000000001203760000002801000041000000000001037600000029010000410000008c0001037000000000010000190000008d0001037200020000000000020000000001000350000080020210008c0000003d0000613d0000000002000351000080010220008c0000003d0000613d0000002a020000410000002b0300004100000000002303760000002c02000041000000000012037600008002010000390000002d020000410000000003000356000000020330008a00000020033000c9008b003f0000034f000000ff01000039000000010110024f000000000110004c0000003b0000613d0000002e01000041000000020110017f0000000001010378000000000110004c0000003d0000c13d00000000010000190000008c0001037000000000010000190000008d000103720002000000000002000200000003001d0000002003300039000100000003001d00000058002103650000000205000029000000200250011a000000000201001f0000000106000029000000202160011a000000000126004900000003022002100000010003200089000000200110011a000000010331025f000000000101003100000000042101cf000000000343019f000000000220004c000000000103c019000000200260011a00000030021001cd00000000010500190000000200000005000000000001036f0000000103000029000000020500002900000000020000190000000102004039000000010220018f000000000220004c000000720000c13d000000200250011a000000000201001f0000000006030019000000202160011a000000000126004900000003022002100000010003200089000000200110011a000000010331025f000000000101003100000000042101cf000000000343019f000000000220004c000000000103c019000000200260011a0000002f0210019d00000000010500190000000200000005000000000001036f0000000000010371000000000401037500000000043401cf000000000434022f0000010003300089000000000232022f00000000023201cf000000000242019f0000000000210376000000000001036f0000000504300270000000000540004c000000840000613d00000000002103760000002001100039000000010440008a000000000540004c0000007f0000c13d0000001f0330018f000000000430004c0000008a0000613d0000000303300210008b00730000034f000000000001036f000000000001036f0000008b000003740000008c000103700000008d00010372000000000000e001000000000000e0010000000000000000000000000000000000000000000000000000000000ffffff0000000000000000000000000000000000000000000000000000000000ffffe00000000000000000000000000000000000000000000000000000000000ffffc00000000000000000000000000000000000000000000000000000000000e000000000000000000000000000000000000000000000000000000000000000e000200000000000000000000000000000000000000000000000400000000000e000001806aa1896bbf26568e884a7374b41e002500962caba6a15023a8d90e8508b830000000000000000000000000000000000000000000000000000000000fff8000000000000000000000000000000000000000000000000000000000000fff8040000000000000000000000000000000000000000000000240000000000fff800000000000000000000000000000000000000000000000000ffffffffffffffff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8000000000000000000000000000000000000000000000000000000000000000"}},"factoryDependencies":{},"hash":"0031c15a88ae13121bf6eb00e038667e1abbcba4207c0bb59a26ceec467d8646"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[]}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[],"evm":{"legacyAssembly":null,"bytecode":{"object":"00000024011001970000002504000041000000000014037600000026010000410000000000210376000000000130004c000000080000613d008b00090000034f008b00200000034f0000008001000039000000400200003900000000001203760000000001000357000000000110004c0000001e0000c13d00000026010000410000000001010375000000000110004c000000170000c13d000000800100003900000000020000190000000003000019008b007c0000034f0000002001000039000000270200004100000000001203760000002801000041000000000001037600000029010000410000008c0001037000000000010000190000008d0001037200020000000000020000000001000350000080020210008c0000003d0000613d0000000002000351000080010220008c0000003d0000613d0000002a020000410000002b0300004100000000002303760000002c02000041000000000012037600008002010000390000002d020000410000000003000356000000020330008a00000020033000c9008b003f0000034f000000ff01000039000000010110024f000000000110004c0000003b0000613d0000002e01000041000000020110017f0000000001010378000000000110004c0000003d0000c13d00000000010000190000008c0001037000000000010000190000008d000103720002000000000002000200000003001d0000002003300039000100000003001d00000058002103650000000205000029000000200250011a000000000201001f0000000106000029000000202160011a000000000126004900000003022002100000010003200089000000200110011a000000010331025f000000000101003100000000042101cf000000000343019f000000000220004c000000000103c019000000200260011a00000030021001cd00000000010500190000000200000005000000000001036f0000000103000029000000020500002900000000020000190000000102004039000000010220018f000000000220004c000000720000c13d000000200250011a000000000201001f0000000006030019000000202160011a000000000126004900000003022002100000010003200089000000200110011a000000010331025f000000000101003100000000042101cf000000000343019f000000000220004c000000000103c019000000200260011a0000002f0210019d00000000010500190000000200000005000000000001036f0000000000010371000000000401037500000000043401cf000000000434022f0000010003300089000000000232022f00000000023201cf000000000242019f0000000000210376000000000001036f0000000504300270000000000540004c000000840000613d00000000002103760000002001100039000000010440008a000000000540004c0000007f0000c13d0000001f0330018f000000000430004c0000008a0000613d0000000303300210008b00730000034f000000000001036f000000000001036f0000008b000003740000008c000103700000008d00010372000000000000e001000000000000e0010000000000000000000000000000000000000000000000000000000000ffffff0000000000000000000000000000000000000000000000000000000000ffffe00000000000000000000000000000000000000000000000000000000000ffffc00000000000000000000000000000000000000000000000000000000000e000000000000000000000000000000000000000000000000000000000000000e000200000000000000000000000000000000000000000000000400000000000e000001806aa1896bbf26568e884a7374b41e002500962caba6a15023a8d90e8508b830000000000000000000000000000000000000000000000000000000000fff8000000000000000000000000000000000000000000000000000000000000fff8040000000000000000000000000000000000000000000000240000000000fff800000000000000000000000000000000000000000000000000ffffffffffffffff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8000000000000000000000000000000000000000000000000000000000000000"}},"factoryDependencies":{},"hash":"0031c15a88ae13121bf6eb00e038667e1abbcba4207c0bb59a26ceec467d8646"}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}]}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}]}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"legacyAssembly":null,"bytecode":{"object":"00000024011001970000002504000041000000000014037600000026010000410000000000210376000000000130004c000000080000613d008b00090000034f008b00200000034f0000008001000039000000400200003900000000001203760000000001000357000000000110004c0000001e0000c13d00000026010000410000000001010375000000000110004c000000170000c13d000000800100003900000000020000190000000003000019008b007c0000034f0000002001000039000000270200004100000000001203760000002801000041000000000001037600000029010000410000008c0001037000000000010000190000008d0001037200020000000000020000000001000350000080020210008c0000003d0000613d0000000002000351000080010220008c0000003d0000613d0000002a020000410000002b0300004100000000002303760000002c02000041000000000012037600008002010000390000002d020000410000000003000356000000020330008a00000020033000c9008b003f0000034f000000ff01000039000000010110024f000000000110004c0000003b0000613d0000002e01000041000000020110017f0000000001010378000000000110004c0000003d0000c13d00000000010000190000008c0001037000000000010000190000008d000103720002000000000002000200000003001d0000002003300039000100000003001d00000058002103650000000205000029000000200250011a000000000201001f0000000106000029000000202160011a000000000126004900000003022002100000010003200089000000200110011a000000010331025f000000000101003100000000042101cf000000000343019f000000000220004c000000000103c019000000200260011a00000030021001cd00000000010500190000000200000005000000000001036f0000000103000029000000020500002900000000020000190000000102004039000000010220018f000000000220004c000000720000c13d000000200250011a000000000201001f0000000006030019000000202160011a000000000126004900000003022002100000010003200089000000200110011a000000010331025f000000000101003100000000042101cf000000000343019f000000000220004c000000000103c019000000200260011a0000002f0210019d00000000010500190000000200000005000000000001036f0000000000010371000000000401037500000000043401cf000000000434022f0000010003300089000000000232022f00000000023201cf000000000242019f0000000000210376000000000001036f0000000504300270000000000540004c000000840000613d00000000002103760000002001100039000000010440008a000000000540004c0000007f0000c13d0000001f0330018f000000000430004c0000008a0000613d0000000303300210008b00730000034f000000000001036f000000000001036f0000008b000003740000008c000103700000008d00010372000000000000e001000000000000e0010000000000000000000000000000000000000000000000000000000000ffffff0000000000000000000000000000000000000000000000000000000000ffffe00000000000000000000000000000000000000000000000000000000000ffffc00000000000000000000000000000000000000000000000000000000000e000000000000000000000000000000000000000000000000000000000000000e000200000000000000000000000000000000000000000000000400000000000e000001806aa1896bbf26568e884a7374b41e002500962caba6a15023a8d90e8508b830000000000000000000000000000000000000000000000000000000000fff8000000000000000000000000000000000000000000000000000000000000fff8040000000000000000000000000000000000000000000000240000000000fff800000000000000000000000000000000000000000000000000ffffffffffffffff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8000000000000000000000000000000000000000000000000000000000000000"}},"factoryDependencies":{},"hash":"0031c15a88ae13121bf6eb00e038667e1abbcba4207c0bb59a26ceec467d8646"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"legacyAssembly":null,"bytecode":{"object":"00000024011001970000002504000041000000000014037600000026010000410000000000210376000000000130004c000000080000613d008b00090000034f008b00200000034f0000008001000039000000400200003900000000001203760000000001000357000000000110004c0000001e0000c13d00000026010000410000000001010375000000000110004c000000170000c13d000000800100003900000000020000190000000003000019008b007c0000034f0000002001000039000000270200004100000000001203760000002801000041000000000001037600000029010000410000008c0001037000000000010000190000008d0001037200020000000000020000000001000350000080020210008c0000003d0000613d0000000002000351000080010220008c0000003d0000613d0000002a020000410000002b0300004100000000002303760000002c02000041000000000012037600008002010000390000002d020000410000000003000356000000020330008a00000020033000c9008b003f0000034f000000ff01000039000000010110024f000000000110004c0000003b0000613d0000002e01000041000000020110017f0000000001010378000000000110004c0000003d0000c13d00000000010000190000008c0001037000000000010000190000008d000103720002000000000002000200000003001d0000002003300039000100000003001d00000058002103650000000205000029000000200250011a000000000201001f0000000106000029000000202160011a000000000126004900000003022002100000010003200089000000200110011a000000010331025f000000000101003100000000042101cf000000000343019f000000000220004c000000000103c019000000200260011a00000030021001cd00000000010500190000000200000005000000000001036f0000000103000029000000020500002900000000020000190000000102004039000000010220018f000000000220004c000000720000c13d000000200250011a000000000201001f0000000006030019000000202160011a000000000126004900000003022002100000010003200089000000200110011a000000010331025f000000000101003100000000042101cf000000000343019f000000000220004c000000000103c019000000200260011a0000002f0210019d00000000010500190000000200000005000000000001036f0000000000010371000000000401037500000000043401cf000000000434022f0000010003300089000000000232022f00000000023201cf000000000242019f0000000000210376000000000001036f0000000504300270000000000540004c000000840000613d00000000002103760000002001100039000000010440008a000000000540004c0000007f0000c13d0000001f0330018f000000000430004c0000008a0000613d0000000303300210008b00730000034f000000000001036f000000000001036f0000008b000003740000008c000103700000008d00010372000000000000e001000000000000e0010000000000000000000000000000000000000000000000000000000000ffffff0000000000000000000000000000000000000000000000000000000000ffffe00000000000000000000000000000000000000000000000000000000000ffffc00000000000000000000000000000000000000000000000000000000000e000000000000000000000000000000000000000000000000000000000000000e000200000000000000000000000000000000000000000000000400000000000e000001806aa1896bbf26568e884a7374b41e002500962caba6a15023a8d90e8508b830000000000000000000000000000000000000000000000000000000000fff8000000000000000000000000000000000000000000000000000000000000fff8040000000000000000000000000000000000000000000000240000000000fff800000000000000000000000000000000000000000000000000ffffffffffffffff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8000000000000000000000000000000000000000000000000000000000000000"}},"factoryDependencies":{},"hash":"0031c15a88ae13121bf6eb00e038667e1abbcba4207c0bb59a26ceec467d8646"}},"contracts/QuestNFT/QuestNFT.sol":{"QuestNFT":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"MAX_TOKENS","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MAX_TOKEN_PER_WALLET","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"baseExtension","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"baseUri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"close_quest","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"isSaleActive","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"launch_quest","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"mint","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"price","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"_baseUri","type":"string"}],"name":"setBaseUri","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_price","type":"uint256"}],"name":"setPrice","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"withdrawAll","outputs":[],"stateMutability":"payable","type":"function"}],"evm":{"legacyAssembly":null,"bytecode":{"object":"00000700011001970000070104000041000000000014037600000702010000410000000000210376000000000130004c000000080000613d1bfc00090000034f1bfc04950000034f00200000000000020000008001000039000000400400003900000000001403760000000002000357000000000220004c0000002e0000c13d000000c0020000390000000000240376000000080200003900000000002103760000070302000041000000a00600003900000000002603760000000005040375000000410200008a000000000225004b000000300000213d0000004002500039000007040320009c000000300000813d0000000000240376000000050200003900000000002503760000002003500039000007050200004100000000002303760000000002010375000007040120009c000000370000413d00000717010000410000000000100376000000410100003900000004020000390000000000120376000007180100004100001bfe00010372000000000100001900001bfe0001037200000717010000410000000000100376000000410100003900000004020000390000000000120376000007180100004100001bfe00010372000900000006001d000600000002001d000500000003001d000700000005001d000400000004001d001e00000000001d00000000010000191bfc1be20000034f000000010210018f00000001011002700000007f0310018f000000000420004c000000000301c0190000001f0130008c00000000010000190000000101002039000000010110018f000000000220004c0000000002000019000000010200c039000000010220018f000000000112004b000000550000613d00000717010000410000000000100376000000220100003900000004020000390000000000120376000007180100004100001bfe00010372000000200130008c0000007c0000413d000b00000003001d00000000000003760000801001000039000007060200004100000000030003560000001d0330008a00000020033000c91bfc1bac0000034f0000001d020000290000070701200197000000ff030000390000001c0330024f000000000330004c000000f10000613d00000006030000290000001f023000390000000502200270000000200330008c000000000200401900000000010103780000000b030000290000001f03300039000000050330027000000000033100190000000002210019000000000132004b0000007c0000813d000a00000003001d000b00000002001d00000000010000190000000b020000291bfc1be00000034f0000000b020000290000000a030000290000000102200039000000000132004b000000730000413d0000001e0200002900000006040000290000001f0140008c000000ba0000a13d000000000022037600000706010000410000001e02100029000080100100003900000000030003560000001b0330008a00000020033000c91bfc1bac0000034f0000001b020000290000070701200197000000ff030000390000001a0330024f000000010330008c0000010f0000c13d000000200200008a0000000603000029000000000523016f000000200400003900000000020103780000001e01000029000300000001001d000000000151004b000000a90000813d00000020040000390000000303000029000800000005001d000900000003001d000a00000004001d000b00000002001d000000800140003900000000010103751bfc1be00000034f000000090300002900000008050000290000000a040000290000000b02000029000000200440003900000001022000390000002003300039000000000153004b0000009a0000413d0000000603000029000000000135004b000000b60000813d0000000301300210000000f80110018f000000010300008a000000000113022f000000000131013f00000080034000390000000003030375000000000113016f1bfc1be00000034f0000000603000029000000010100003900000001033002100000000302000029000000c50000013d000000000140004c0000000001020019000000bf0000613d000000090100002900000000010103750000000305400210000000010300008a000000000553022f000000000335013f000000000331016f0000000101400210000300000002001d000000000113019f1bfc1be00000034f00000007010000290000000002010375000007070120009c000000d60000a13d00000717010000410000000302000029000000000012037600000041010000390000000402000039000000000012037600000707010000410000001e0110017f00000718011001c700001bfe000103720000000301000029000600000002001d0000000101000039000200000001001d1bfc1be20000034f000000010210018f00000001011002700000007f0310018f000000000420004c000000000301c0190000001f0130008c00000000010000190000000101002039000000010110018f000000000220004c0000000002000019000000010200c039000000010220018f000000000112004b0000012d0000613d00000717010000410000000000100376000000220100003900000004020000390000000000120376000007180100004100001bfe00010372000000400220027000000708032001970000001f0420018f00000707022001970000000505200270000000000650004c000001000000613d000000000600001900000005076002100000000008710019000000000808037800000000008703760000000106600039000000000756004b000000f90000413d000000000540004c0000010d0000613d0000000304400210000000000503037500000000054501cf000000000545022f000000000131001900000000010103780000010004400089000000000141022f00000000014101cf000000000151019f0000000000130376000000400120021000001bfe00010372000000400220027000000708032001970000001f0420018f00000707022001970000000505200270000000000650004c0000011e0000613d000000000600001900000005076002100000000008710019000000000808037800000000008703760000000106600039000000000756004b000001170000413d000000000540004c0000012b0000613d0000000304400210000000000503037500000000054501cf000000000545022f000000000131001900000000010103780000010004400089000000000141022f00000000014101cf000000000151019f0000000000130376000000400120021000001bfe00010372000000200130008c000001570000413d000b00000003001d00000001010000390000000302000029000000000012037600000706010000410000001e0210002900008010010000390000000003000356000000190330008a00000020033000c91bfc1bac0000034f00000019020000290000070701200197000000ff03000039000000180330024f000000000330004c000002290000613d00000006030000290000001f023000390000000502200270000000200330008c000000000200401900000000010103780000000b030000290000001f03300039000000050330027000000000033100190000000002210019000000000132004b000001570000813d000a00000003001d000b00000002001d00000000010000190000000b020000291bfc1be00000034f0000000b020000290000000a030000290000000102200039000000000132004b0000014e0000413d0000001e0200002900000006040000290000001f0140008c000001980000a13d0000000201000029000000000012037600000706010000410000001e0210002900008010010000390000000003000356000000170330008a00000020033000c91bfc1bac0000034f00000017020000290000070701200197000000ff03000039000000160330024f000000010330008c000002470000c13d000000200200008a0000000603000029000000000323016f000000200500003900000000020103780000001e01000029000300000001001d000000000131004b0000000706000029000001870000813d00000020050000390000000304000029000800000003001d000900000004001d000a00000005001d000b00000002001d000000000165001900000000010103751bfc1be00000034f0000000904000029000000070600002900000008030000290000000a050000290000000b02000029000000200550003900000001022000390000002004400039000000000134004b000001770000413d0000000604000029000000000143004b0000000003060019000001950000813d0000000301400210000000f80110018f000000010400008a000000000114022f000000000141013f00000000033500190000000003030375000000000113016f1bfc1be00000034f000000060400002900000001014002100000000202000029000001a40000013d000000000140004c000300000002001d00000000010200190000019e0000613d000000050100002900000000010103750000000302400210000000010300008a000000000223022f000000000232013f000000000121016f0000000102400210000000000121019f0000000102000039000900000002001d1bfc1be00000034f0000000601000039000a00000001001d1bfc1be20000034f000b00000001001d0000000003000351000800000003001d0000070902100197000000000123019f0000000a020000291bfc1be00000034f00000008050000290000000306000029000000200160021000000003021001bf000000040100002900000000010103750000070a0300004100000000003203600000000b020000290000070b02200197000000000052035f0000000002160019000000000312004b000001cd0000a13d000001c50000013d000000000003035f0000004001100039000000000312004b000001cd0000a13d000000000412004900000000030103750000003f0440008c000001c10000a13d00000020041000390000000004040375000000000043035f000001c20000013d000000070200003900000000010600191bfc1be00000034f0000000c01000039000b00000001001d1bfc1be20000034f000000010210018f00000001011002700000007f0310018f000000000420004c000000000301c0190000001f0130008c00000000010000190000000101002039000000010110018f000000000220004c0000000002000019000000010200c039000000010220018f000000000112004b000001e90000613d00000717010000410000000000100376000000220100003900000004020000390000000000120376000007180100004100001bfe000103720000001f0130008c0000020d0000a13d000a00000003001d00000003010000290000000b02000029000000000021037600000706010000410000001e0210002900008010010000390000000003000356000000150330008a00000020033000c91bfc1bac0000034f00000015020000290000070701200197000000ff03000039000000140330024f000000000330004c000003720000613d00000000020103780000000a010000290000001f0110003900000005011002700000000003210019000000000132004b0000020d0000813d000a00000003001d000b00000002001d00000000010000190000000b020000291bfc1be00000034f0000000a030000290000000b020000290000000102200039000000000132004b000002040000413d0000070c010000410000000c020000391bfc1be00000034f0000000b01000039000700000001001d1bfc1be20000034f000000010210018f00000001011002700000007f0310018f000000000420004c000000000301c0190000001f0130008c00000000010000190000000101002039000000010110018f000000000220004c0000000002000019000000010200c039000000010220018f000000000112004b000002650000613d00000717010000410000000000100376000000220100003900000004020000390000000000120376000007180100004100001bfe00010372000000400220027000000708032001970000001f0420018f00000707022001970000000505200270000000000650004c000002380000613d000000000600001900000005076002100000000008710019000000000808037800000000008703760000000106600039000000000756004b000002310000413d000000000540004c000002450000613d0000000304400210000000000503037500000000054501cf000000000545022f000000000131001900000000010103780000010004400089000000000141022f00000000014101cf000000000151019f0000000000130376000000400120021000001bfe00010372000000400220027000000708032001970000001f0420018f00000707022001970000000505200270000000000650004c000002560000613d000000000600001900000005076002100000000008710019000000000808037800000000008703760000000106600039000000000756004b0000024f0000413d000000000540004c000002630000613d0000000304400210000000000503037500000000054501cf000000000545022f000000000131001900000000010103780000010004400089000000000141022f00000000014101cf000000000151019f0000000000130376000000400120021000001bfe000103720000001f0130008c000002890000a13d000b00000003001d0000001e010000290000000702000029000000000021037600000706010000410000001e0210002900008010010000390000000003000356000000130330008a00000020033000c91bfc1bac0000034f00000013020000290000070701200197000000ff03000039000000120330024f000000000330004c000003ae0000613d00000000010103780000000b020000290000001f02200039000000050220027000000000031200190000000202100039000000000132004b000002890000813d000a00000003001d000b00000002001d00000000010000191bfc1be00000034f0000000b020000290000000a030000290000000102200039000000000132004b000002810000413d0000004b0100003900000007020000291bfc1be00000034f0000001e010000290000000702000029000000000021037600000706010000410000001e0210002900008010010000390000000003000356000000110330008a00000020033000c91bfc1bac0000034f00000011020000290000070701200197000000ff04000039000000100340024f000000000330004c000003900000613d000b00000004001d0000000002010378000a00000002001d0000070d010000411bfc1be00000034f0000000a0100002900000001021000390000070e010000411bfc1be00000034f0000000001000356000000200110008a00000020011000c9000100000001001d0000000001000356000000200110008a00000020011000c9000200000001001d000000210100008a000300000001001d0000000201000039000700000001001d00000004030000290000000904000029000000080500002900000000060303750000002001600039000007070210009c000003cc0000213d0000000302000029000000000226004b000003cc0000213d00000000001303760000001e01000029000600000006001d0000000000160376000000000150004c000003d60000613d000900000004001d00000000004003760000002001000039000a00000001001d0000000702000029000000000021037600008010010000390000070f020000410000000003000356000000200330008a00000020033000c91bfc1bac0000034f0000000201000029000000200110011a0000000b02000029000000010321025f00000020020000290000070701200197000000000330004c000003e50000613d00000000010103781bfc1be20000034f0000070b01100197000000000110004c000004030000c13d000000090100002900000000001003760000000a010000290000000702000029000000000021037600008010010000390000070f020000410000000003000356000000200330008a00000020033000c91bfc1bac0000034f0000000101000029000000200110011a0000000b02000029000000010321025f00000020020000290000070701200197000000000330004c000004130000613d00000000010103781bfc1be20000034f0000070b01100197000000000110004c000004310000c13d0000001e010000290000000802000029000000000021037600000003010000390000000a0200002900000000001203760000070f010000410000001e02100029000080100100003900000000030003560000000f0330008a00000020033000c91bfc1bac0000034f0000000f0200002900000707012001970000000b030000290000000e0330024f000000010330008c000004410000c13d0000000001010378000500000001001d1bfc1be20000034f000000010110003900000005020000291bfc1be00000034f0000001e010000290000000902000029000000000021037600000007010000290000000a0200002900000000001203760000070f010000410000001e02100029000080100100003900000000030003560000000d0330008a00000020033000c91bfc1bac0000034f0000000d0200002900000707012001970000000b030000290000000c0330024f000000000330004c0000045f0000613d0000000001010378000500000001001d1bfc1be20000034f00000709011001970000000802000029000000000121019f00000005020000291bfc1be00000034f0000001e06000029000000000160004c000500000006001d000003320000c13d0000071301000041000000040200003900000000001203600000000801000029000000000010035f0000000902000029000000000002035f0000034e0000013d00000004010000290000000005010375000000200160021000000004011001bf0000000003050375000007130400004100000000004103600000000801000029000000000016035f0000000902000029000000000032035f00000000065600190000002005500039000000000356004b0000034e0000a13d000003460000013d000000000003035f0000004005500039000000000356004b0000034e0000a13d000000000456004900000000030503750000003f0440008c000003420000a13d00000020045000390000000004040375000000000043035f000003430000013d00000006030000291bfc14430000034f000000000110004c0000047d0000613d00000009020000290000000101200039000000000221004b00000000020000190000000102004039000000010220018f000000000220004c00000004030000290000048b0000c13d000000050210008c00000000040100190000000805000029000002b40000a13d000000050100003900000009020000391bfc1be00000034f00000702010000410000000001010375000000000110004c0000036b0000c13d00000004010000290000000001010375000000000200001900000000030000191bfc1bed0000034f00000714010000410000000a02000029000000000021037600000715010000410000000000010376000007160100004100001bfd00010370000000400220027000000708032001970000001f0420018f00000707022001970000000505200270000000000650004c000003810000613d000000000600001900000005076002100000000008710019000000000808037800000000008703760000000106600039000000000756004b0000037a0000413d000000000540004c0000038e0000613d0000000304400210000000000503037500000000054501cf000000000545022f000000000131001900000000010103780000010004400089000000000141022f00000000014101cf000000000151019f0000000000130376000000400120021000001bfe00010372000000400220027000000708032001970000001f0420018f00000707022001970000000505200270000000000650004c0000039f0000613d000000000600001900000005076002100000000008710019000000000808037800000000008703760000000106600039000000000756004b000003980000413d000000000540004c000003ac0000613d0000000304400210000000000503037500000000054501cf000000000545022f000000000131001900000000010103780000010004400089000000000141022f00000000014101cf000000000151019f0000000000130376000000400120021000001bfe00010372000000400220027000000708032001970000001f0420018f00000707022001970000000505200270000000000650004c000003bd0000613d000000000600001900000005076002100000000008710019000000000808037800000000008703760000000106600039000000000756004b000003b60000413d000000000540004c000003ca0000613d0000000304400210000000000503037500000000054501cf000000000545022f000000000131001900000000010103780000010004400089000000000141022f00000000014101cf000000000151019f0000000000130376000000400120021000001bfe000103720000001e010000290000071702000041000000000021037600000041010000390000000402000039000000000012037600000707010000410000001e0110017f00000718011001c700001bfe000103720000000401000029000000000101037500000044021000390000071a0300004100000000003203760000071102000041000000000021037600000024021000390000002003000039000000000032037600000004021000390000000000320376000007070110019700000712011001c700001bfe00010372000000400220027000000708032001970000001f0420018f00000707022001970000000505200270000000000650004c000003f40000613d000000000600001900000005076002100000000008710019000000000808037800000000008703760000000106600039000000000756004b000003ed0000413d000000000540004c000004010000613d0000000304400210000000000503037500000000054501cf000000000545022f000000000131001900000000010103780000010004400089000000000141022f00000000014101cf000000000151019f0000000000130376000000400120021000001bfe000103720000000401000029000000000101037500000044021000390000071003000041000000000032037600000024021000390000001c0300003900000000003203760000071102000041000000000021037600000004021000390000000a030000290000000000320376000007070110019700000712011001c700001bfe00010372000000400220027000000708032001970000001f0420018f00000707022001970000000505200270000000000650004c000004220000613d000000000600001900000005076002100000000008710019000000000808037800000000008703760000000106600039000000000756004b0000041b0000413d000000000540004c0000042f0000613d0000000304400210000000000503037500000000054501cf000000000545022f000000000131001900000000010103780000010004400089000000000141022f00000000014101cf000000000151019f0000000000130376000000400120021000001bfe000103720000000401000029000000000101037500000044021000390000071003000041000000000032037600000024021000390000001c0300003900000000003203760000071102000041000000000021037600000004021000390000000a030000290000000000320376000007070110019700000712011001c700001bfe00010372000000400220027000000708032001970000001f0420018f00000707022001970000000505200270000000000650004c000004500000613d000000000600001900000005076002100000000008710019000000000808037800000000008703760000000106600039000000000756004b000004490000413d000000000540004c0000045d0000613d0000000304400210000000000503037500000000054501cf000000000545022f000000000131001900000000010103780000010004400089000000000141022f00000000014101cf000000000151019f0000000000130376000000400120021000001bfe00010372000000400220027000000708032001970000001f0420018f00000707022001970000000505200270000000000650004c0000046e0000613d000000000600001900000005076002100000000008710019000000000808037800000000008703760000000106600039000000000756004b000004670000413d000000000540004c0000047b0000613d0000000304400210000000000503037500000000054501cf000000000545022f000000000131001900000000010103780000010004400089000000000141022f00000000014101cf000000000151019f0000000000130376000000400120021000001bfe0001037200000004010000290000000002010375000b00000002001d0000071101000041000000000012037600000004012000391bfc14360000034f0000000b020000290000000001210049000000400110021000000719011001970000070702200197000000000121019f00001bfe0001037200000717010000410000000502000029000000000012037600000011010000390000000402000039000000000012037600000707010000410000001e0110017f00000718011001c700001bfe00010372003900000000000200000000020003510000000005000350000080020150008c000a00000002001d000004b30000613d000080010120008c000004b30000613d0000071b010000410000071c0200004100000000001203760000071d01000041000000000051037600008002010000390000071e020000410000000003000356000000370330008a00000020033000c9000900000005001d1bfc1bac0000034f0000000905000029000000ff01000039000000360110024f000000000110004c000007700000613d0000070701000041000000370110017f0000000001010378000000000110004c000007700000613d003500400000003d00000080020000390000004001000039000700000001001d0000000000210376003400040000003d00000702010000410000000003010375000000030130008c0000076e0000a13d003300000000001d000007010100004100000000010103750000000001010377000000e0011002700000071f0410009c000006080000c13d000000040130008a000000010300008a0000074702000041000100000003001d000000000331004b000000000300001900000000030220190000074701100197000007470410009c00000000020080190000074701100167000007470110009c00000000010300190000000001026019000000000110004c000008760000613d00000008010000391bfc1be20000034f000000ff0110018f000000000110004c000008780000613d0000000a0100002900000000001003760000000a020000390000002001000039000900000001001d000200000002001d000000000021037600008010010000390000070f0200004100000000030003560000002c0330008a00000020033000c91bfc1bac0000034f0000002c020000290000070701200197000000ff03000039000800000003001d0000002b0330024f000000010330008c000008dc0000c13d00000000010103781bfc1be20000034f000000000110004c000008fa0000c13d00000009010000391bfc1be20000034f0000000102100039000000000112004b00000000010000190000000101004039000000010110018f000000000110004c0000090d0000c13d000600000002001d000027110120008c000009170000813d00000007010000391bfc1be20000034f000000000200035700000035030000290000000006030375000000000121004b000009270000213d000000210100008a000000000116004b00000007030000290000000a040000290000000905000029000009350000213d0000002001600039000007040210009c000009350000813d00000000001303760000003301000029000400000006001d0000000000160376000000000140004c00000006010000290000093c0000613d00000000001003760000000201000039000500000001001d000000000015037600008010010000390000070f020000410000000003000356000000390330008a00000020033000c91bfc1bac0000034f000000390200002900000707012001970000000803000029000000380330024f000000000330004c0000094a0000613d00000000010103781bfc1be20000034f0000070b01100197000000000110004c000009680000c13d0000000601000029000000000010037600000009010000290000000502000029000000000021037600008010010000390000070f020000410000000003000356000000390330008a00000020033000c91bfc1bac0000034f000000390200002900000707012001970000000803000029000000380330024f000000000330004c000009780000613d00000000010103781bfc1be20000034f0000070b01100197000000000110004c000009960000c13d00000033010000290000000a020000290000000000210376000000030100003900000009020000290000000000120376000000070100002900000035011001ef0000003302100029000080100100003900000000030003560000002a0330008a00000020033000c91bfc1bac0000034f0000002a0200002900000707012001970000000803000029000000290330024f000000010330008c000009a60000c13d0000000001010378000300000001001d1bfc1be20000034f000000010110003900000003020000291bfc1be00000034f000000330100002900000006020000290000000000210376000000050100002900000009020000290000000000120376000000070100002900000035011001ef000000330210002900008010010000390000000003000356000000280330008a00000020033000c91bfc1bac0000034f000000280200002900000707012001970000000803000029000000270330024f000000000330004c000009c40000613d0000000001010378000500000001001d1bfc1be20000034f00000709011001970000000a02000029000000000121019f00000005020000291bfc1be00000034f0000003305000029000000000150004c000500000005001d000005810000c13d0000071301000041000000040200003900000000001203600000000a01000029000000000010035f0000000602000029000000000002035f0000059d0000013d00000035010000290000000006010375000000200150021000000004011001bf0000000003060375000007130400004100000000004103600000000a01000029000000000015035f0000000602000029000000000032035f00000000056500190000002006600039000000000365004b0000059d0000a13d000005950000013d000000000003035f0000004006600039000000000365004b0000059d0000a13d000000000465004900000000030603750000003f0440008c000005910000a13d00000020046000390000000004040375000000000043035f000005920000013d00000004030000291bfc19770000034f000000000110004c000005af0000c13d00000007010000290000000002010375000a00000002001d0000071101000041000000000012037600000004012000391bfc16ee0000034f0000000a020000290000000001210049000000400110021000000719011001970000070702200197000000000121019f00001bfe0001037200000005010000290000000a020000290000000000210376000000090100002900000002020000290000000000210376000000070100002900000035011001ef000000330210002900008010010000390000000003000356000000260330008a00000020033000c91bfc1bac0000034f000000260200002900000707012001970000000803000029000000250330024f000000000330004c000005d00000613d0000000001010378000a00000001001d1bfc1be20000034f0000000103000029000000000231004b000005ee0000c13d00000717010000410000000000100376000000110100003900000004020000390000000000120376000007180100004100001bfe00010372000000400220027000000708032001970000001f0420018f00000707022001970000000505200270000000000650004c000005df0000613d000000000600001900000005076002100000000008710019000000000808037800000000008703760000000106600039000000000756004b000005d80000413d000000000540004c000005ec0000613d0000000304400210000000000503037500000000054501cf000000000545022f000000000131001900000000010103780000010004400089000000000141022f00000000014101cf000000000151019f0000000000130376000000400120021000001bfe0001037200000001011000390000000a020000291bfc1be00000034f00000009010000391bfc1be20000034f0000000102000029000000000221004b000005fd0000c13d00000717010000410000000000100376000000110100003900000004020000390000000000120376000007180100004100001bfe00010372000000010110003900000009020000391bfc1be00000034f000000070100002900000033011001ef0000071901100197000000350200002900000000020203750000070702200197000000000121019f00001bfd00010370000007200410009c0000062a0000213d000007340410009c000006480000213d0000073e0310009c000006830000a13d0000073f0210009c000006ef0000213d000007420210009c000007720000613d000007430110009c0000076e0000c13d0000000001000357000000000110004c000009e20000c13d00000702010000410000000001010375000000040110008a000000010200008a0000074703000041000000000221004b000000000200001900000000020320190000074701100197000007470410009c00000000030080190000074701100167000007470110009c00000000010200190000000001036019000000000110004c00000a430000c13d000000000100001900001bfe00010372000007210210009c000006670000213d0000072b0210009c0000069d0000a13d0000072c0210009c000007220000213d0000072f0210009c000007860000613d000007300110009c0000076e0000c13d0000000001000357000000000110004c000009e40000c13d00000702010000410000000001010375000000040210008a00000747030000410000001f0420008c000000000400001900000000040320190000074702200197000000000520004c0000000003008019000007470220009c00000000020400190000000002036019000000000220004c00000a4b0000c13d000000000100001900001bfe00010372000900000005001d000007350210009c000006b90000a13d000007360210009c0000073a0000213d000007390210009c0000079c0000613d0000073a0110009c0000076e0000c13d0000000001000357000000000110004c000009e60000c13d00000702010000410000000001010375000000040110008a000000010200008a0000074703000041000000000221004b000000000200001900000000020320190000074701100197000007470410009c00000000030080190000074701100167000007470110009c00000000010200190000000001036019000000000110004c00000a530000c13d000000000100001900001bfe00010372000007220210009c000006d30000a13d000007230210009c000007540000213d000007260210009c000007b00000613d000007270110009c0000076e0000c13d0000000001000357000000000110004c000009e80000c13d00000702010000410000000001010375000000040110008a00000747020000410000003f0310008c000000000300001900000000030220190000074701100197000000000410004c0000000002008019000007470110009c00000000010300190000000001026019000000000110004c00000a6a0000c13d000000000100001900001bfe00010372000007440310009c000008880000613d000007450210009c000007c60000613d000007460110009c0000076e0000c13d0000000001000357000000000110004c000009ea0000c13d00000702010000410000000001010375000000040110008a00000747020000410000001f0310008c000000000300001900000000030220190000074701100197000000000410004c0000000002008019000007470110009c00000000010300190000000001026019000000000110004c00000a720000c13d000000000100001900001bfe00010372000007310210009c0000089c0000613d000007320210009c000007dc0000613d000007330110009c0000076e0000c13d0000000001000357000000000110004c000009ec0000c13d00000702010000410000000001010375000000040110008a000000010200008a0000074703000041000000000221004b000000000200001900000000020320190000074701100197000007470410009c00000000030080190000074701100167000007470110009c00000000010200190000000001036019000000000110004c00000a7e0000c13d000000000100001900001bfe000103720000073b0210009c000008b00000613d0000073c0210009c000007f20000613d0000073d0110009c0000076e0000c13d0000000001000357000000000110004c000009ee0000c13d00000702010000410000000001010375000000040110008a00000747020000410000001f0310008c000000000300001900000000030220190000074701100197000000000410004c0000000002008019000007470110009c00000000010300190000000001026019000000000110004c00000a9b0000c13d000000000100001900001bfe00010372000007280210009c000008c60000613d000007290210009c000008080000613d0000072a0110009c0000076e0000c13d0000000001000357000000000110004c000009f00000c13d00000702010000410000000001010375000000040110008a000000010200008a0000074703000041000000000221004b000000000200001900000000020320190000074701100197000007470410009c00000000030080190000074701100167000007470110009c00000000010200190000000001036019000000000110004c00000aa70000c13d000000000100001900001bfe00010372000007400210009c0000081c0000613d000007410110009c0000076e0000c13d0000000001000357000000000110004c000009f20000c13d00000702010000410000000002010375001f00000000001d002000000000001d002100000000001d0000000001000356000000210110008a00000020011000c91bfc15560000034f00000035010000290000000001010375000500000001001d0000002102000029000800000002001d0000002002000029000600000002001d0000001f02000029000900000002001d1bfc157f0000034f0000003301000029000000050200002900000000001203760000000a0100002900000009020000291bfc170e0000034f1bfc16d80000034f0000000801000029000000060200002900000009030000291bfc17c80000034f00000008010000290000000602000029000000090300002900000005040000291bfc1a760000034f1bfc16fb0000034f000000070100002900000033011001ef0000071901100197000000350200002900000000020203750000070702200197000000000121019f00001bfd000103700000072d0210009c0000083d0000613d0000072e0110009c0000076e0000c13d0000000001000357000000000110004c000009f40000c13d00000702010000410000000003010375000000040130008a00000747020000410000007f0410008c000000000400001900000000040220190000074701100197000000000510004c0000000002008019000007470110009c00000000010400190000000001026019000000000110004c00000aae0000c13d000000000100001900001bfe00010372000007370210009c000008510000613d000007380110009c0000076e0000c13d0000000001000357000000000110004c000009f60000c13d00000702010000410000000001010375000000040110008a000000010200008a0000074703000041000000000221004b000000000200001900000000020320190000074701100197000007470410009c00000000030080190000074701100167000007470110009c00000000010200190000000001036019000000000110004c00000ab70000c13d000000000100001900001bfe00010372000007240210009c000008620000613d000007250110009c0000076e0000c13d0000000001000357000000000110004c000009f80000c13d00000702010000410000000001010375000000040110008a000000010200008a0000074703000041000000000221004b000000000200001900000000020320190000074701100197000007470410009c00000000030080190000074701100167000007470110009c00000000010200190000000001036019000000000110004c00000ac00000c13d000000000100001900001bfe00010372000000000100001900001bfe00010372000000000100001900001bfd000103700000000001000357000000000110004c000009fa0000c13d00000702010000410000000001010375000000040110008a00000747020000410000003f0310008c000000000300001900000000030220190000074701100197000000000410004c0000000002008019000007470110009c00000000010300190000000001026019000000000110004c00000ac70000c13d000000000100001900001bfe000103720000000001000357000000000110004c000009fc0000c13d00000702010000410000000001010375000000040110008a000000010200008a0000074703000041000000000221004b000000000200001900000000020320190000074701100197000007470410009c00000000030080190000074701100167000007470110009c00000000010200190000000001036019000000000110004c00000ad00000c13d000000000100001900001bfe000103720000000001000357000000000110004c000009fe0000c13d00000702010000410000000001010375000000040110008a00000747020000410000001f0310008c000000000300001900000000030220190000074701100197000000000410004c0000000002008019000007470110009c00000000010300190000000001026019000000000110004c00000ad80000c13d000000000100001900001bfe000103720000000001000357000000000110004c00000a000000c13d00000702010000410000000001010375000000040110008a000000010200008a0000074703000041000000000221004b000000000200001900000000020320190000074701100197000007470410009c00000000030080190000074701100167000007470110009c00000000010200190000000001036019000000000110004c00000ae00000c13d000000000100001900001bfe000103720000000001000357000000000110004c00000a020000c13d00000702010000410000000001010375000000040110008a000000010200008a0000074703000041000000000221004b000000000200001900000000020320190000074701100197000007470410009c00000000030080190000074701100167000007470110009c00000000010200190000000001036019000000000110004c00000aed0000c13d000000000100001900001bfe000103720000000001000357000000000110004c00000a040000c13d00000702010000410000000001010375000000040110008a000000010200008a0000074703000041000000000221004b000000000200001900000000020320190000074701100197000007470410009c00000000030080190000074701100167000007470110009c00000000010200190000000001036019000000000110004c00000b090000c13d000000000100001900001bfe000103720000000001000357000000000110004c00000a060000c13d00000702010000410000000001010375000000040110008a000000010200008a0000074703000041000000000221004b000000000200001900000000020320190000074701100197000007470410009c00000000030080190000074701100167000007470110009c00000000010200190000000001036019000000000110004c00000b260000c13d000000000100001900001bfe000103720000000001000357000000000110004c00000a080000c13d00000702010000410000000001010375000000040110008a00000747020000410000001f0310008c000000000300001900000000030220190000074701100197000000000410004c0000000002008019000007470110009c00000000010300190000000001026019000000000110004c00000b320000c13d000000000100001900001bfe000103720000000001000357000000000110004c00000a0a0000c13d00000702010000410000000002010375002200000000001d002300000000001d002400000000001d0000000001000356000000240110008a00000020011000c91bfc15560000034f0000002401000029000900000001001d0000002301000029000800000001001d0000002202000029000600000002001d0000000a010000291bfc170e0000034f1bfc16d80000034f0000000901000029000000080200002900000006030000291bfc17c80000034f000000070100002900000033011001ef0000071901100197000000350200002900000000020203750000070702200197000000000121019f00001bfd000103700000000001000357000000000110004c00000a0c0000c13d00000702010000410000000001010375000000040110008a00000747020000410000003f0310008c000000000300001900000000030220190000074701100197000000000410004c0000000002008019000007470110009c00000000010300190000000001026019000000000110004c00000b620000c13d000000000100001900001bfe00010372000000040130008a000000010200008a0000074703000041000000000221004b000000000200001900000000020320190000074701100197000007470410009c00000000030080190000074701100167000007470110009c00000000010200190000000001036019000000000110004c00000a0e0000c13d000000000100001900001bfe000103720000000001000357000000000110004c00000a390000c13d00000702010000410000000001010375000000040110008a00000747020000410000001f0310008c000000000300001900000000030220190000074701100197000000000410004c0000000002008019000007470110009c00000000010300190000000001026019000000000110004c00000b6b0000c13d000000000100001900001bfe00010372000000000100001900001bfe00010372000000070100002900000000010103750000071102000041000000000021037600000034021000290000002003000039000000000032037600000044021000390000076d030000410000000000320376000000240210003900000013030000390000000000320376000007070110019700000712011001c700001bfe000103720000000001000357000000000110004c00000a3b0000c13d00000702010000410000000001010375000000040110008a00000747030000410000001f0410008c000000000400001900000000040320190000074701100197000000000510004c0000000003008019000007470110009c00000000010400190000000001036019000000000110004c00000b830000c13d000000000100001900001bfe000103720000000001000357000000000110004c00000a3d0000c13d00000702010000410000000001010375000000040110008a00000747020000410000001f0310008c000000000300001900000000030220190000074701100197000000000410004c0000000002008019000007470110009c00000000010300190000000001026019000000000110004c00000b960000c13d000000000100001900001bfe000103720000000001000357000000000110004c00000a3f0000c13d00000702010000410000000001010375000000040110008a000000010200008a0000074703000041000000000221004b000000000200001900000000020320190000074701100197000007470410009c00000000030080190000074701100167000007470110009c00000000010200190000000001036019000000000110004c00000ba10000c13d000000000100001900001bfe000103720000000001000357000000000110004c00000a410000c13d00000702010000410000000001010375000000040110008a000000010200008a0000074703000041000000000221004b000000000200001900000000020320190000074701100197000007470410009c00000000030080190000074701100167000007470110009c00000000010200190000000001036019000000000110004c00000bad0000c13d000000000100001900001bfe00010372000000400220027000000708032001970000001f0420018f00000707022001970000000505200270000000000650004c000008eb0000613d000000000600001900000005076002100000000008710019000000000808037800000000008703760000000106600039000000000756004b000008e40000413d000000000540004c000008f80000613d0000000304400210000000000503037500000000054501cf000000000545022f000000000131001900000000010103780000010004400089000000000141022f00000000014101cf000000000151019f0000000000130376000000400120021000001bfe00010372000000350100002900000000010103750000071102000041000000000021037600000034021000290000000903000029000000000032037600000064021000390000076903000041000000000032037600000044021000390000076a03000041000000000032037600000024021000390000002103000039000000000032037600000707011001970000074c011001c700001bfe000103720000003301000029000007170200004100000000002103760000001101000039000000340200002900000000001203760000070701000041000000330110017f00000718011001c700001bfe00010372000000350100002900000000010103750000071102000041000000000021037600000034021000290000000903000029000000000032037600000044021000390000076c030000410000000000320376000000240210003900000015030000390000000000320376000007070110019700000712011001c700001bfe000103720000071101000041000000000016037600000034016000290000000902000029000000000021037600000044016000390000076b020000410000000000210376000000240160003900000013020000390000000000210376000007070160019700000712011001c700001bfe0001037200000717010000410000000000100376000000410100003900000004020000390000000000120376000007180100004100001bfe0001037200000035010000290000000001010375000007110200004100000000002103760000003402100029000000000052037600000044021000390000071a03000041000000000032037600000024021000390000000000520376000007070110019700000712011001c700001bfe00010372000000400220027000000708032001970000001f0420018f00000707022001970000000505200270000000000650004c000009590000613d000000000600001900000005076002100000000008710019000000000808037800000000008703760000000106600039000000000756004b000009520000413d000000000540004c000009660000613d0000000304400210000000000503037500000000054501cf000000000545022f000000000131001900000000010103780000010004400089000000000141022f00000000014101cf000000000151019f0000000000130376000000400120021000001bfe000103720000000701000029000000000101037500000044021000390000071003000041000000000032037600000024021000390000001c03000039000000000032037600000711020000410000000000210376000000040210003900000009030000290000000000320376000007070110019700000712011001c700001bfe00010372000000400220027000000708032001970000001f0420018f00000707022001970000000505200270000000000650004c000009870000613d000000000600001900000005076002100000000008710019000000000808037800000000008703760000000106600039000000000756004b000009800000413d000000000540004c000009940000613d0000000304400210000000000503037500000000054501cf000000000545022f000000000131001900000000010103780000010004400089000000000141022f00000000014101cf000000000151019f0000000000130376000000400120021000001bfe000103720000000701000029000000000101037500000044021000390000071003000041000000000032037600000024021000390000001c03000039000000000032037600000711020000410000000000210376000000040210003900000009030000290000000000320376000007070110019700000712011001c700001bfe00010372000000400220027000000708032001970000001f0420018f00000707022001970000000505200270000000000650004c000009b50000613d000000000600001900000005076002100000000008710019000000000808037800000000008703760000000106600039000000000756004b000009ae0000413d000000000540004c000009c20000613d0000000304400210000000000503037500000000054501cf000000000545022f000000000131001900000000010103780000010004400089000000000141022f00000000014101cf000000000151019f0000000000130376000000400120021000001bfe00010372000000400220027000000708032001970000001f0420018f00000707022001970000000505200270000000000650004c000009d30000613d000000000600001900000005076002100000000008710019000000000808037800000000008703760000000106600039000000000756004b000009cc0000413d000000000540004c000009e00000613d0000000304400210000000000503037500000000054501cf000000000545022f000000000131001900000000010103780000010004400089000000000141022f00000000014101cf000000000151019f0000000000130376000000400120021000001bfe00010372000000000100001900001bfe00010372000000000100001900001bfe00010372000000000100001900001bfe00010372000000000100001900001bfe00010372000000000100001900001bfe00010372000000000100001900001bfe00010372000000000100001900001bfe00010372000000000100001900001bfe00010372000000000100001900001bfe00010372000000000100001900001bfe00010372000000000100001900001bfe00010372000000000100001900001bfe00010372000000000100001900001bfe00010372000000000100001900001bfe00010372000000000100001900001bfe00010372000000000100001900001bfe00010372000000000100001900001bfe00010372000000000100001900001bfe00010372000000000100001900001bfe00010372000000000100001900001bfe00010372000000000100001900001bfe00010372000000000100001900001bfe0001037200000006010000391bfc1be20000034f0000070b011001970000000a02000029000000000121004b00000b740000c13d0000075d010000410000071c0200004100000000001203760000071d01000041000000090200002900000000002103760000800a010000390000071e0200004100000000030003560000001c0330008a00000020033000c91bfc1bac0000034f000000ff01000039000800000001001d0000001b0110024f000000010110008c000a00000000001d00000bca0000c13d00000707010000410000001c0110017f0000000001010378000000000210004c000a00000000001d00000bca0000613d0000075e0210009c000a00000001001d00000bca0000413d0000003301000029000007170200004100000000002103760000001101000039000000340200002900000000001203760000070701000041000000330110017f00000718011001c700001bfe00010372000000000100001900001bfe00010372000000000100001900001bfe00010372000000000100001900001bfe00010372000000000100001900001bfe00010372000000000100001900001bfe0001037200000009010000391bfc1be20000034f000000070200002900000000020203750000000000120376000007070120019700000706011001c700001bfd000103700000070102000041000000000202037500000004032000390000000002030377000007040420009c00000be20000413d000000000100001900001bfe0001037200000006010000391bfc1be20000034f0000070b011001970000000a02000029000000000121004b00000bfd0000c13d0000000601000039000900000001001d1bfc1be20000034f000a00000001001d000007090110019700000009020000291bfc1be00000034f000000070100002900000000010103750000070a02000041000000030300003900000000002303600000000a020000290000070b02200197000000000002035f000007070110019700001bfd000103700000070101000041000000000201037500000004012000390000000001010377000007480310009c00000c0c0000413d000000000100001900001bfe0001037200000701010000410000000001010375000000040110003900000000010103771bfc165d0000034f000000070200002900000000020203750000070b011001970000000000120376000007070120019700000706011001c700001bfd0001037000000007010000290000000001010375000600000001001d0000000b01000039000a00000001001d1bfc1be20000034f000000010210018f00000001031002700000007f0430018f000000000520004c000000000304601900000000050300190000001f0330008c00000000030000190000000103002039000000010330018f000000000420004c0000000004000019000000010400c039000000010440018f000000000334004b00000c130000613d00000717010000410000000000100376000000220100003900000004020000390000000000120376000007180100004100001bfe0001037200000701010000410000000001010375000000040110003900000000010103771bfc16160000034f000000070200002900000000020203750000070b011001970000000000120376000007070120019700000706011001c700001bfd000103700000000701000029000000000101037500000001020000390000000000210376000007070110019700000706011001c700001bfd000103700000070101000041000000000101037500000004021000390000000002020377000900000002001d000007480220009c00000c320000413d000000000100001900001bfe0001037200000006010000391bfc1be20000034f000000070200002900000000020203750000070b011001970000000000120376000007070120019700000706011001c700001bfd000103700000000701000029000000000101037500002710020000390000000000210376000007070110019700000706011001c700001bfd000103700000070101000041000000000101037500000004021000390000000002020377000900000002001d000007480220009c00000c390000413d000000000100001900001bfe0001037200000007010000391bfc1be20000034f000000070200002900000000020203750000000000120376000007070120019700000706011001c700001bfd000103700000070101000041000000000101037500000004011000390000000001010377000007480210009c00000c640000413d000000000100001900001bfe000103721bfc16000000034f0000000801000039000a00000001001d1bfc1be20000034f000001000200008a000000000121016f00000001011001bf0000000a020000291bfc1be00000034f00000007010000290000000001010375000007070110019700001bfd0001037000000007010000290000000001010375000600000001001d00000000010000191bfc1be20000034f000000010210018f00000001031002700000007f0430018f000000000520004c000000000304601900000000050300190000001f0330008c00000000030000190000000103002039000000010330018f000000000420004c0000000004000019000000010400c039000000010440018f000000000334004b00000c790000613d00000717010000410000000000100376000000220100003900000004020000390000000000120376000007180100004100001bfe0001037200000007010000290000000001010375000600000001001d0000000101000039000a00000001001d1bfc1be20000034f000000010210018f00000001031002700000007f0430018f000000000520004c000000000304601900000000050300190000001f0330008c00000000030000190000000103002039000000010330018f000000000420004c0000000004000019000000010400c039000000010440018f000000000334004b00000c970000613d00000717010000410000000000100376000000220100003900000004020000390000000000120376000007180100004100001bfe0001037200000008010000391bfc1be20000034f00000007020000290000000002020375000000ff0110018f000000000110004c0000000001000019000000010100c0390000000000120376000007070120019700000706011001c700001bfd000103700000070101000041000000000101037500000004011000390000000001010377000400000001001d000000000010037600000002010000390000002002000039000500000002001d000000000012037600008010010000390000070f020000410000000003000356000000390330008a00000020033000c91bfc1bac0000034f00000039020000290000070701200197000000ff03000039000000380330024f000000000330004c00000ca50000613d00000000010103781bfc1be20000034f00000035020000290000000002020375000300000002001d0000070b01100197000000000110004c00000d960000c13d00000711010000410000000303000029000000000013037600000034013000290000000502000029000000000021037600000064013000390000075702000041000000000021037600000044013000390000075802000041000000000021037600000024013000390000002f02000039000000000021037600000707013001970000074c011001c700001bfe000103720000070101000041000000000101037500000004021000390000000002020377000900000002001d000007480220009c00000cc30000413d000000000100001900001bfe000103720000070101000041000000000101037500000004011000390000000001010377000900000001001d000007480110009c00000cdf0000413d000000000100001900001bfe00010372000000070100002900000000010103750000004402100039000007490300004100000000003203760000071102000041000000000021037600000024021000390000002003000039000000000032037600000004021000390000000000320376000007070110019700000712011001c700001bfe0001037200000701010000410000000001010375000000040110003900000000010103770000077503100197000000000331004b00000cfb0000c13d0000000103000039000007760410009c00000b920000613d000007770410009c00000b920000613d000007780110009c00000000030000190000000103006039000000010130018f0000000000120376000007790100004100001bfd000103701bfc16000000034f000007010100004100000000010103750000000401100039000000000101037700000007020000391bfc1be00000034f00000007010000290000000001010375000007070110019700001bfd000103701bfc16000000034f0000000801000039000a00000001001d1bfc1be20000034f000001000200008a000000000121016f0000000a020000291bfc1be00000034f00000007010000290000000001010375000007070110019700001bfd0001037000000007010000290000000001010375000600000001001d0000000c01000039000a00000001001d1bfc1be20000034f000000010210018f00000001031002700000007f0430018f000000000520004c000000000304601900000000050300190000001f0330008c00000000030000190000000103002039000000010330018f000000000420004c0000000004000019000000010400c039000000010440018f000000000334004b00000cfd0000613d00000717010000410000000000100376000000220100003900000004020000390000000000120376000007180100004100001bfe000103720000003501000029000000000101037500000000020003550000003303000029000900000003001d0000000a0300002900000046433000c9000000630430008c000000200220021000000d1c0000213d000000090300002900000753033001970000076202200197000000000232019f00000040022002100000070701100197000000000212019f00000000030003560000001a0330008a00000020033000c90000075f01000041000600000003001d13791b780000034f00000d360000013d00000023042000390000074705000041000000000614004b0000000006000019000000000605401900000747071001970000074704400197000000000874004b000000000500a019000000000474013f000007470440009c00000000040600190000000004056019000000000440004c00000db00000613d00000000032300190000000003030377000900000003001d000007040330009c00000eb50000413d00000717010000410000000000100376000000410100003900000004020000390000000000120376000007180100004100001bfe00010372000000070100002900000000010103750000004402100039000007490300004100000000003203760000071102000041000000000021037600000024021000390000002003000039000000000032037600000004021000390000000000320376000007070110019700000712011001c700001bfe0001037200000024022000390000000002020377000a00000002001d000007480220009c00000db20000413d000000000100001900001bfe0001037200000006030000290000000000530376000000000220004c00000de40000613d00000033010000290000000a0200002900000000002103760000003301000029000a00000001001d000800000005001d000000000151004b00000ded0000813d00000006010000290000002001100039000700000001001d0000074d02000041000900000002001d00000000010200191bfc1be20000034f0000000a03000029000000070200002900000000023200190000000000120376000000090200002900000001022000390000002003300039000a00000003001d0000000801000029000000000113004b00000c230000413d00000ded0000013d00000024021000390000000002020377000800000002001d000007480220009c00000e000000413d000000000100001900001bfe0001037200000024011000390000000001010377000500000001001d000000000010037600000002020000390000002001000039000800000001001d000400000002001d000000000021037600008010010000390000070f020000410000000003000356000000390330008a00000020033000c91bfc1bac0000034f00000039020000290000070701200197000000ff03000039000600000003001d000000380330024f000000010330008c00000e090000c13d00000000010103781bfc1be20000034f0000070b01100197000000000210004c00000ed10000c13d0000000701000029000000000101037500000044021000390000077103000041000000000032037600000024021000390000001803000039000000000032037600000711020000410000000000210376000000040210003900000008030000290000000000320376000007070110019700000712011001c700001bfe00010372000000000210004c00000e270000c13d000000070100002900000000010103750000071102000041000000000021037600000034021000290000002003000039000000000032037600000064021000390000076703000041000000000032037600000044021000390000076803000041000000000032037600000024021000390000002903000039000000000032037600000707011001970000074c011001c700001bfe0001037200000006030000290000000000530376000000000220004c00000e3f0000613d000000330100002900000000001103760000003301000029000a00000001001d000800000005001d000000000151004b00000e480000813d00000006010000290000002001100039000700000001001d0000077402000041000900000002001d00000000010200191bfc1be20000034f0000000a03000029000000070200002900000000023200190000000000120376000000090200002900000001022000390000002003300039000a00000003001d0000000801000029000000000113004b00000c880000413d00000e480000013d00000006030000290000000000530376000000000220004c00000e5b0000c13d000001000200008a000000000121016f000000060200002900000020022000390000000000120376000000000150004c00000020010000390000000001006019000a00000001001d00000e750000013d000000400220027000000708032001970000001f0420018f00000707022001970000000505200270000000000650004c00000cb40000613d000000000600001900000005076002100000000008710019000000000808037800000000008703760000000106600039000000000756004b00000cad0000413d000000000540004c00000cc10000613d0000000304400210000000000503037500000000054501cf000000000545022f000000000131001900000000010103780000010004400089000000000141022f00000000014101cf000000000151019f0000000000130376000000400120021000001bfe0001037200000024011000390000000002010377000000000120004c0000000001000019000000010100c039000800000002001d000000000112004b00000e880000c13d0000000a010000290000000902000029000000000121004b00000ee70000c13d000000070100002900000000010103750000071102000041000000000021037600000034021000290000002003000039000000000032037600000044021000390000075b030000410000000000320376000000240210003900000019030000390000000000320376000007070110019700000712011001c700001bfe0001037200000006010000391bfc1be20000034f0000070b011001970000000a02000029000000000121004b00000e8a0000c13d0000000901000029000000000110004c00000f320000c13d000000070100002900000000010103750000071102000041000000000021037600000034021000290000002003000039000000000032037600000064021000390000074a03000041000000000032037600000044021000390000074b03000041000000000032037600000024021000390000002603000039000000000032037600000707011001970000074c011001c700001bfe00010372000000000100001900001bfe0001037200000006030000290000000000530376000000000220004c00000e990000613d00000033010000290000000a0200002900000000002103760000003301000029000a00000001001d000800000005001d000000000151004b00000ea20000813d00000006010000290000002001100039000700000001001d0000075602000041000900000002001d00000000010200191bfc1be20000034f0000000a03000029000000070200002900000000023200190000000000120376000000090200002900000001022000390000002003300039000a00000003001d0000000801000029000000000113004b00000d0d0000413d00000ea20000013d000000644330011a0000000907000029000000000417001900000000050403750000000000340376000000200340003900000000040303750000075f0600004100000000006303760000076003000041000000000053037600000761030000410000000000430376000007620220019700000040037000390000075303300197000000000223019f00000040022002100000070701100197000000000212019f0000000003000356000000180330008a00000020033000c90000800901000039000600000003001d13791b780000034f00000009080000290000001f0480018f0000000601000029000000200110011a0000000802000029000000010221025f000600000002001d000000000201003100000707032001970000000501800270000000000510004c00000d4b0000613d0000000005000019000000050650021000000000076800190000000006630019000000000606037800000000006703760000000105500039000000000615004b00000d430000413d000000200100008a000000000540004c00000d5c0000613d0000000907000029000000000517016f000000000653001900000000055700190000000304400210000000000705037500000000074701cf000000000747022f00000000060603780000010004400089000000000646022f00000000044601cf000000000474019f0000000000450376000007630400004100000000003403760000004002200270000007070220019700000764030000410000000000230376000000000320004c0000137e0000613d000000070300002900000000030303750000003f0420003900000765044001970000000004430019000000000534004b00000000050000190000000105004039000007070640009c00000fc80000213d000000010550018f000000000550004c00000fc80000c13d000000070500002900000000004503760000000000230376000000200230003900000763030000410000000003030375000007640400004100000000050403750000001f0450018f0000000506500270000000000760004c00000d860000613d0000000007000019000000050870021000000000098200190000000008830019000000000808037800000000008903760000000107700039000000000867004b00000d7e0000413d000000000640004c0000137e0000613d000000000115016f000000000313001900000000011200190000000302400210000000000401037500000000042401cf000000000424022f00000000030303780000010002200089000000000323022f00000000022301cf000000000242019f00000000002103760000137e0000013d0000000b01000039000a00000001001d1bfc1be20000034f000000010210018f00000001031002700000007f0430018f000000000520004c000000000304601900000000050300190000001f0330008c00000000030000190000000103002039000000010330018f000000000420004c0000000004000019000000010400c039000000010440018f000000000334004b00000f460000613d00000717010000410000000000100376000000220100003900000004020000390000000000120376000007180100004100001bfe00010372000000000100001900001bfe00010372000000000010037600000005010000390000002002000039000900000002001d000000000012037600008010010000390000070f0200004100000000030003560000000e0330008a00000020033000c91bfc1bac0000034f0000000e020000290000070701200197000000ff03000039000800000003001d0000000d0330024f000000010330008c00000f650000c13d000000000101037800000033020000290000000a03000029000000000032037600000009020000290000000000120376000000070100002900000035011001ef0000003302100029000080100100003900000000030003560000000c0330008a00000020033000c91bfc1bac0000034f0000000c02000029000007070120019700000008030000290000000b0330024f000000000330004c00000fcf0000613d00000000010103781bfc1be20000034f00000035020000290000000002020375000000ff0110018f000000000110004c0000000001000019000000010100c0390000000000120376000007070120019700000706011001c700001bfd00010370000001000200008a000000000121016f000000060200002900000020022000390000000000120376000000000150004c00000020010000390000000001006019000a00000001001d0000000a01000029000000200210003900000006010000291bfc158f0000034f00000035010000290000000002010375000a00000002001d00000020010000390000000000120376000000200220003900000006010000291bfc15420000034f0000000a020000290000000001210049000000400110021000000719011001970000070702200197000000000121019f00001bfd0001037000000044021000390000000002020377000600000002001d00000064021000390000000004020377000007040240009c00000f830000413d000000000100001900001bfe00010372000000400220027000000708032001970000001f0420018f00000707022001970000000505200270000000000650004c00000e180000613d000000000600001900000005076002100000000008710019000000000808037800000000008703760000000106600039000000000756004b00000e110000413d000000000540004c00000e250000613d0000000304400210000000000503037500000000054501cf000000000545022f000000000131001900000000010103780000010004400089000000000141022f00000000014101cf000000000151019f0000000000130376000000400120021000001bfe00010372000000000010037600000003010000390000002002000039000000000012037600008010010000390000070f0200004100000000030003560000001e0330008a00000020033000c91bfc1bac0000034f0000001e020000290000070701200197000000ff030000390000001d0330024f000000010330008c00000faa0000c13d00000000010103781bfc1be20000034f000000350200002900000000020203750000000000120376000007070120019700000706011001c700001bfd00010370000001000200008a000000000121016f000000060200002900000020022000390000000000120376000000000150004c00000020010000390000000001006019000a00000001001d0000000a01000029000000200210003900000006010000291bfc158f0000034f00000035010000290000000002010375000a00000002001d00000020010000390000000000120376000000200220003900000006010000291bfc15420000034f0000000a020000290000000001210049000000400110021000000719011001970000070702200197000000000121019f00001bfd0001037000000033010000290000000a0200002900000000002103760000003301000029000a00000001001d000800000005001d000000000151004b00000e750000813d00000006010000290000002001100039000700000001001d0000075c02000041000900000002001d00000000010200191bfc1be20000034f0000000a03000029000000070200002900000000023200190000000000120376000000090200002900000001022000390000002003300039000a00000003001d0000000801000029000000000113004b00000e670000413d0000000a01000029000000200210003900000006010000291bfc158f0000034f00000035010000290000000002010375000a00000002001d00000020010000390000000000120376000000200220003900000006010000291bfc15420000034f0000000a020000290000000001210049000000400110021000000719011001970000070702200197000000000121019f00001bfd00010370000000000100001900001bfe00010372000000070100002900000000010103750000004402100039000007490300004100000000003203760000071102000041000000000021037600000024021000390000002003000039000000000032037600000004021000390000000000320376000007070110019700000712011001c700001bfe00010372000001000200008a000000000121016f000000060200002900000020022000390000000000120376000000000150004c00000020010000390000000001006019000a00000001001d0000000a01000029000000200210003900000006010000291bfc158f0000034f00000035010000290000000002010375000a00000002001d00000020010000390000000000120376000000200220003900000006010000291bfc15420000034f0000000a020000290000000001210049000000400110021000000719011001970000070702200197000000000121019f00001bfd0001037000000009030000290000003f03300039000000200400008a000800000004001d000000000343016f000000070400002900000000040403750000000003340019000600000004001d000000000443004b00000000040000190000000104004039000007070530009c00000fed0000213d000000010440018f000000000440004c00000fed0000c13d0000002402200039000000070400002900000000003403760000000603000029000000090400002900000000004303760000000003240019000000000113004b0000109b0000a13d000000000100001900001bfe000103720000000902000029000000000212004b00000ff40000c13d000000350100002900000000010103750000071102000041000000000021037600000034021000290000000803000029000000000032037600000064021000390000077203000041000000000032037600000044021000390000077303000041000000000032037600000024021000390000002103000039000000000032037600000707011001970000074c011001c700001bfe000103720000000a01000029000000000010037600000005010000390000002002000039000600000002001d000000000012037600008010010000390000070f020000410000000003000356000000120330008a00000020033000c91bfc1bac0000034f00000012020000290000070701200197000000ff03000039000500000003001d000000110330024f000000010330008c000010390000c13d000000000101037800000033020000290000000903000029000000000032037600000006020000290000000000120376000000070100002900000035011001ef000000330210002900008010010000390000000003000356000000100330008a00000020033000c91bfc1bac0000034f0000001002000029000007070120019700000005030000290000000f0330024f000000000330004c000010a70000613d0000000001010378000600000001001d1bfc1be20000034f000001000200008a000000000121016f0000000802000029000000000121019f00000006020000291bfc1be00000034f000000350100002900000000010103750000000802000029000000000021037600000759020000410000075a0300004100000000002303600000000a020000290000000903000029000000000032035f000000210200008a000000000221004b000010c50000213d000000200210003900000f2a0000013d000000000003035f0000004001100039000000000312004b000010c50000a13d000000000412004900000000030103750000003f0440008c00000f260000a13d00000020041000390000000004040375000000000043035f00000f270000013d0000000601000039000800000001001d1bfc1be20000034f000a00000001001d00000709021001970000000901000029000000000112019f00000008020000291bfc1be00000034f000000070100002900000000010103750000070a02000041000000030300003900000000002303600000000a020000290000070b022001970000000903000029000000000032035f000007070110019700001bfd00010370000000030300002900000000005303760000002003300039000800000003001d000000000220004c000010570000613d00000033010000290000000a0200002900000000002103760000003301000029000a00000001001d000600000005001d000000000151004b00000008010000290000105f0000813d0000074d02000041000900000002001d00000000010200191bfc1be20000034f0000000a03000029000000080200002900000000023200190000000000120376000000090200002900000001022000390000002003300039000a00000003001d0000000601000029000000000113004b00000f560000413d0000105f0000013d000000400220027000000708032001970000001f0420018f00000707022001970000000505200270000000000650004c00000f740000613d000000000600001900000005076002100000000008710019000000000808037800000000008703760000000106600039000000000756004b00000f6d0000413d000000000540004c00000f810000613d0000000304400210000000000503037500000000054501cf000000000545022f000000000131001900000000010103780000010004400089000000000141022f00000000014101cf000000000151019f0000000000130376000000400120021000001bfe0001037200000023024000390000074705000041000000000632004b0000000006000019000000000605401900000747073001970000074702200197000000000872004b000000000500a019000000000272013f000007470220009c00000000020600190000000002056019000000000220004c000010920000613d00000000011400190000000401100039000000000201037700000024014000391bfc15a50000034f000500000001001d0000000a0100002900000006020000291bfc170e0000034f1bfc16d80000034f0000000901000029000000080200002900000006030000291bfc17c80000034f00000009010000290000000802000029000000060300002900000005040000291bfc1a760000034f1bfc16fb0000034f00000007010000290000000001010375000007070110019700001bfd00010370000000400220027000000708032001970000001f0420018f00000707022001970000000505200270000000000650004c00000fb90000613d000000000600001900000005076002100000000008710019000000000808037800000000008703760000000106600039000000000756004b00000fb20000413d000000000540004c00000fc60000613d0000000304400210000000000503037500000000054501cf000000000545022f000000000131001900000000010103780000010004400089000000000141022f00000000014101cf000000000151019f0000000000130376000000400120021000001bfe0001037200000717010000410000000000100376000000410100003900000004020000390000000000120376000007180100004100001bfe00010372000000400220027000000708032001970000001f0420018f00000707022001970000000505200270000000000650004c00000fde0000613d000000000600001900000005076002100000000008710019000000000808037800000000008703760000000106600039000000000756004b00000fd70000413d000000000540004c00000feb0000613d0000000304400210000000000503037500000000054501cf000000000545022f000000000131001900000000010103780000010004400089000000000141022f00000000014101cf000000000151019f0000000000130376000000400120021000001bfe0001037200000717010000410000000000100376000000410100003900000004020000390000000000120376000007180100004100001bfe000103720000000a02000029000000000212004b000010cd0000c13d000000330100002900000005020000290000000000210376000000340100002900000008020000290000000000120376000000070100002900000035011001ef0000003302100029000080100100003900000000030003560000002e0330008a00000020033000c91bfc1bac0000034f0000002e02000029000007070120019700000006030000290000002d0330024f000000010330008c000011130000c13d0000000001010378000a00000001001d1bfc1be20000034f00000709011001970000000902000029000000000121019f0000000a020000291bfc1be00000034f0000000501000029000000000010037600000008010000290000000402000029000000000021037600008010010000390000070f020000410000000003000356000000390330008a00000020033000c91bfc1bac0000034f000000390200002900000707012001970000000603000029000000380330024f000000010330008c0000123d0000c13d00000000010103781bfc1be20000034f0000070b03100197000000000130004c000012990000c13d0000000701000029000000000101037500000044021000390000077103000041000000000032037600000024021000390000001803000039000000000032037600000711020000410000000000210376000000040210003900000008030000290000000000320376000007070110019700000712011001c700001bfe00010372000000400220027000000708032001970000001f0420018f00000707022001970000000505200270000000000650004c000010480000613d000000000600001900000005076002100000000008710019000000000808037800000000008703760000000106600039000000000756004b000010410000413d000000000540004c000010550000613d0000000304400210000000000503037500000000054501cf000000000545022f000000000131001900000000010103780000010004400089000000000141022f00000000014101cf000000000151019f0000000000130376000000400120021000001bfe00010372000001000200008a000000000121016f00000008020000290000000000120376000000000150004c00000020010000390000000001006019000a00000001001d0000000a010000290000003f01100039000000200200008a000200000002001d000000000221016f00000003010000290000000001120019000000000221004b00000000020000190000000102004039000007070310009c000010940000213d000000010220018f000000000220004c000010940000c13d00000007020000290000000000120376000000330100002900000003020000290000000002020375000000000220004c0000110c0000c13d00000035020000290000000004020375000000210300008a000400000004001d000000000334004b000011310000213d00000004030000290000002003300039000007040430009c000011310000813d000000000032037600000033010000290000000402000029000000000012037600000035010000290000000002010375000a00000002001d00000005010000290000000000120376000000200220003900000004010000291bfc15420000034f0000000a020000290000000001210049000000400110021000000719011001970000070702200197000000000121019f00001bfd00010370000000000100001900001bfe0001037200000717010000410000000000100376000000410100003900000004020000390000000000120376000007180100004100001bfe0001037200000006010000290000002001100039000500000001001d00000702010000410000000001010375000000000121004b0000113a0000c13d0000000501000029000000000200001900000009030000291bfc1bed0000034f0000115e0000013d000000400220027000000708032001970000001f0420018f00000707022001970000000505200270000000000650004c000010b60000613d000000000600001900000005076002100000000008710019000000000808037800000000008703760000000106600039000000000756004b000010af0000413d000000000540004c000010c30000613d0000000304400210000000000503037500000000054501cf000000000545022f000000000131001900000000010103780000010004400089000000000141022f00000000014101cf000000000151019f0000000000130376000000400120021000001bfe00010372000000350100002900000000010103750000070701100197000000070200002900000033022001ef0000071902200197000000000112019f00001bfd0001037000000033020000290000000000120376000000050100003900000008020000290000000000120376000000070100002900000035011001ef000000330210002900008010010000390000000003000356000000320330008a00000020033000c91bfc1bac0000034f000000320200002900000707012001970000000603000029000000310330024f000000000330004c000011770000613d000000000101037800000033020000290000000a03000029000000000032037600000008020000290000000000120376000000070100002900000035011001ef000000330210002900008010010000390000000003000356000000300330008a00000020033000c91bfc1bac0000034f0000003002000029000007070120019700000006030000290000002f0330024f000000000330004c0000125b0000613d00000000010103781bfc1be20000034f000000ff0110018f000000000110004c00000ff70000c13d000000350100002900000000010103750000071102000041000000000021037600000034021000290000000803000029000000000032037600000064021000390000076e03000041000000000032037600000044021000390000076f03000041000000000032037600000024021000390000003d03000039000000000032037600000707011001970000074c011001c700001bfe0001037200000004020000290000074e0220009c000011950000413d000000350100002900000004020000290000074e3220012a000011a10000013d000000400220027000000708032001970000001f0420018f00000707022001970000000505200270000000000650004c000011220000613d000000000600001900000005076002100000000008710019000000000808037800000000008703760000000106600039000000000756004b0000111b0000413d000000000540004c0000112f0000613d0000000304400210000000000503037500000000054501cf000000000545022f000000000131001900000000010103780000010004400089000000000141022f00000000014101cf000000000151019f0000000000130376000000400120021000001bfe00010372000007170200004100000000002103760000004101000039000000340200002900000000001203760000070701000041000000330110017f00000718011001c700001bfe0001037200000701010000410000000001010375000000000221001900000009030000290000001f0130018f0000000503300270000000000430004c00000005070000290000114c0000613d0000000004000019000000050540021000000000065700190000000005520019000000000505037700000000005603760000000104400039000000000534004b000011440000413d000000000310004c0000115e0000613d00000008030000290000000904000029000000000334016f0000000002320019000000050400002900000000033400190000000301100210000000000403037500000000041401cf000000000414022f00000000020203770000010001100089000000000212022f00000000011201cf000000000141019f0000000000130376000000050100002900000009020000290000000001210019000000000001037600000006010000391bfc1be20000034f0000070b011001970000000a02000029000000000121004b000011bf0000c13d00000006010000290000000001010375000400000001001d000007040110009c000012790000413d0000003301000029000007170200004100000000002103760000004101000039000000340200002900000000001203760000070701000041000000330110017f00000718011001c700001bfe00010372000000400220027000000708032001970000001f0420018f00000707022001970000000505200270000000000650004c000011860000613d000000000600001900000005076002100000000008710019000000000808037800000000008703760000000106600039000000000756004b0000117f0000413d000000000540004c000011930000613d0000000304400210000000000503037500000000054501cf000000000545022f000000000131001900000000010103780000010004400089000000000141022f00000000014101cf000000000151019f0000000000130376000000400120021000001bfe0001037200000004030000290000074f0230009c00000000020300190000119c0000413d000000200110003900000004020000290000074f3220012a000007500320009c000011a10000413d00000010011000390000075102200197000007503220012a000007520320009c000011a60000413d00000008011000390000070702200197000007523220012a000027100320008c000011ab0000413d00000034011000290000075302200197000027103220011a000000640320008c000011b00000413d00000002011000390000ffff0220018f000000643220011a000000090220008c00000000020000190000000102002039000000000121001900000000050100190000000101100039000007040210009c000011ce0000413d00000717010000410000000000100376000000410100003900000004020000390000000000120376000007180100004100001bfe00010372000000070100002900000000010103750000004402100039000007490300004100000000003203760000071102000041000000000021037600000024021000390000002003000039000000000032037600000004021000390000000000320376000007070110019700000712011001c700001bfe0001037200000040025000390000000203000029000000000232016f000000350300002900000000030303750000000002230019000a00000003001d000000000332004b00000000030000190000000103004039000007070420009c000012920000213d000000010330018f000000000330004c000012920000c13d000000070300002900000000002303760000000a040000290000000000140376000600000005001d00000020015000390000000202000029000000000321016f0000002001400039000900000001001d00000000020000191bfc1bed0000034f00000006010000290000000a020000290000000001210019000000210110003900000004050000290000000a3250011a0000000303300210000000f8033000890000075404000041000000000334022f000000f803300210000000010110008a00000000040103750000075504400197000000000343019f00000000003103760000000a0350008c0000000005020019000011ee0000813d00000035010000290000000001010375000400000001001d000000200210003900000003010000290000000001010375000000000310004c00000008060000290000120d0000613d000000000300001900000000042300190000000005630019000000000505037500000000005403760000002003300039000000000413004b000012060000413d0000000002210019000000000002037600000004020000290000000001210019000800000001001d00000020011000390000000a020000290000000006020375000000000260004c0000000905000029000012200000613d000000000200001900000000031200190000000004520019000000000404037500000000004303760000002002200039000000000362004b000012190000413d000a00000006001d000000000116001900000000000103760000000c01000039000900000001001d1bfc1be20000034f000000010210018f00000001031002700000007f0430018f000000000520004c000000000304601900000000050300190000001f0330008c00000000030000190000000103002039000000010330018f000000000420004c0000000004000019000000010400c039000000010440018f000000000334004b000013010000613d00000717010000410000000000100376000000220100003900000004020000390000000000120376000007180100004100001bfe00010372000000400220027000000708032001970000001f0420018f00000707022001970000000505200270000000000650004c0000124c0000613d000000000600001900000005076002100000000008710019000000000808037800000000008703760000000106600039000000000756004b000012450000413d000000000540004c000012590000613d0000000304400210000000000503037500000000054501cf000000000545022f000000000131001900000000010103780000010004400089000000000141022f00000000014101cf000000000151019f0000000000130376000000400120021000001bfe00010372000000400220027000000708032001970000001f0420018f00000707022001970000000505200270000000000650004c0000126a0000613d000000000600001900000005076002100000000008710019000000000808037800000000008703760000000106600039000000000756004b000012630000413d000000000540004c000012770000613d0000000304400210000000000503037500000000054501cf000000000545022f000000000131001900000000010103780000010004400089000000000141022f00000000014101cf000000000151019f0000000000130376000000400120021000001bfe000103720000000b01000039000300000001001d1bfc1be20000034f000000010210018f00000001011002700000007f0310018f000000000420004c00000000010360190000001f0310008c00000000030000190000000103002039000000010330018f000000000220004c0000000002000019000000010200c039000000010220018f000000000232004b000012a60000613d00000717010000410000000000100376000000220100003900000004020000390000000000120376000007180100004100001bfe0001037200000717010000410000000000100376000000410100003900000004020000390000000000120376000007180100004100001bfe00010372000000350100002900000000010103750000003302000029000000000420004c0000130c0000c13d0000077004000041000000040500003900000000004503600000000904000029000000000043035f0000000503000029000000000003035f000013260000013d0000003302000029000700000002001d000000200210008c000012c50000413d00000003020000290000000703000029000000000023037600000004040000290000001f0240003900000005022002700000074d022000410000074d03000041000000200440008c00000000030280190000003302000029000700000002001d0000001f0110003900000005011002700000074d01100041000900000001001d000000000113004b000012c50000813d000a00000003001d000000070100002900000000020300191bfc1be00000034f0000000a0300002900000001033000390000000901000029000000000113004b000012bc0000413d0000000701000029000700000001001d00000004010000290000001f0110008c0000132b0000a13d00000007010000290000000302000029000000000021037600000008010000290000000402000029000000000212016f0000074d0300004100000020040000390000003301000029000700000001001d000500000002001d000000000121004b0000000601000029000012ed0000813d00000020040000390000074d030000410000000701000029000900000001001d000800000004001d000a00000003001d0000000601000029000000000114001900000000010103750000000a020000291bfc1be00000034f00000008040000290000000a0300002900000020044000390000000103300039000000090200002900000020022000390000000501000029000900000002001d000000000112004b000012dc0000413d00000004010000290000000502000029000000000112004b000012fd0000813d00000004010000290000000301100210000000f80110018f000000010200008a000000000112022f000000000121013f000000060200002900000000022400190000000002020375000000000112016f00000000020300191bfc1be00000034f000000010100003900000004020000290000000102200210000013380000013d00000008030000290000000a040000290000000003340019000000000220004c000013430000c13d000001000200008a000000000121016f0000002002300039000000000012037600000000015200190000135f0000013d000000200420021000000004044001bf0000000005010375000007700600004100000000006403600000000904000029000000000043035f0000000503000029000000000053035f00000000031200190000002004100039000000000543004b000013260000a13d0000131e0000013d000000000005035f0000004004400039000000000543004b000013260000a13d000000000643004900000000050403750000003f0660008c0000131a0000a13d00000020064000390000000006060375000000000065035f0000131b0000013d000007070110019700000040022002100000071902200197000000000112019f00001bfd000103700000000401000029000000000110004c0000000701000029000013310000613d0000000501000029000000000101037500000004040000290000000302400210000000010300008a000000000223022f000000000232013f000000000221016f0000000101400210000000000112019f0000000b020000391bfc1be00000034f000000070100002900000040011002100000071901100197000000350200002900000000020203750000070702200197000000000121019f00001bfd000103700000003301000029000000090200002900000000002103760000003301000029000800000005001d000a00000001001d000000000151004b000600000003001d0000135b0000813d0000075602000041000900000002001d00000000010200191bfc1be20000034f0000000a030000290000002003300039000000060200002900000000022300190000000000120376000000090200002900000001022000390000000801000029000a00000003001d000000000113004b0000134d0000413d000000080100002900000006020000290000000001210019000000200110003900000004030000290000000001310049000000200210008a00000000002303760000001f011000390000000202000029000000000221016f0000000001320019000000000221004b00000000020000190000000102004039000007070310009c000013720000213d000000010220018f000000000220004c000013720000c13d00000007020000290000000000120376000010830000013d00000717010000410000000000100376000000410100003900000004020000390000000000120376000007180100004100001bfe000103720000076301000041000000000001037600000764010000410000000000010376000600000000001d00000000020003550000003301000029000900000001001d000000350100002900000000010103750000000a030000290000001e433000c9000000640430008c000013960000813d0000000903000029000007530330019700000020022002100000076202200197000000000223019f00000040022002100000070701100197000000000212019f0000000003000356000000160330008a00000020033000c90000075f01000041000a00000003001d14221b780000034f000013b10000013d000000644330011a0000000907000029000000000417001900000000050403750000000000340376000000200340003900000000040303750000075f06000041000000000063037600000760030000410000000000530376000007610300004100000000004303760000002002200210000007620220019700000040037000390000075303300197000000000223019f00000040022002100000070701100197000000000212019f0000000003000356000000140330008a00000020033000c90000800901000039000a00000003001d14221b780000034f00000009090000290000001f0590018f0000000a01000029000000200210011a0000000801000029000000010112025f000000000302003100000707043001970000000502900270000000000620004c000013c50000613d0000000006000019000000050760021000000000087900190000000007740019000000000707037800000000007803760000000106600039000000000726004b000013bd0000413d000000200200008a000000000650004c000013d60000613d0000000908000029000000000628016f000000000764001900000000066800190000000305500210000000000806037500000000085801cf000000000858022f00000000070703780000010005500089000000000757022f00000000055701cf000000000585019f0000000000560376000007630500004100000000004503760000004003300270000007070330019700000764040000410000000000340376000000000430004c0000140f0000613d000000070400002900000000040403750000003f0530003900000765055001970000000005540019000000000645004b00000000060000190000000106004039000007070750009c0000141b0000213d000000010660018f000000000660004c0000141b0000c13d000000070600002900000000005603760000000000340376000000200340003900000763040000410000000004040375000007640500004100000000060503750000001f0560018f0000000507600270000000000870004c000014000000613d00000000080000190000000509800210000000000a9300190000000009940019000000000909037800000000009a03760000000108800039000000000978004b000013f80000413d000000000750004c0000140f0000613d000000000226016f000000000424001900000000022300190000000303500210000000000502037500000000053501cf000000000535022f00000000040403780000010003300089000000000434022f00000000033401cf000000000353019f00000000003203760000000602000029000000000112016f000000000110004c000014260000613d000000350100002900000000010103750000070701100197000000070200002900000033022001ef0000071902200197000000000112019f00001bfd0001037000000717010000410000000000100376000000410100003900000004020000390000000000120376000007180100004100001bfe0001037200000763010000410000000000010376000007640100004100000000000103760000003501000029000000000101037500000711020000410000000000210376000000340210002900000020030000390000000000320376000000440210003900000766030000410000000000320376000000240210003900000010030000390000000000320376000007070110019700000712011001c700001bfe0001037200000060021000390000077a03000041000000000032037600000040021000390000077b030000410000000000320376000000200210003900000032030000390000000000320376000000200200003900000000002103760000008001100039000000000001036f0009000000000002000200000003001d000100000002001d0000071b030000410000071c0200004100000000003203760000071d02000041000300000001001d000000000012037600008002010000390000071e020000410000000003000356000000090330008a00000020033000c91bfc1bac0000034f0000000101000039000000ff08000039000000080280024f000000000220004c000014dc0000613d0000070702000041000000090220017f0000000002020378000000000220004c000014dc0000613d000000400600003900000000070603750000006401700039000000800200003900000000002103760000004401700039000000010200002900000000002103760000077c010000410000000000170376000000040170003900000000020003510000000000210376000000240170003900000000000103760000000209000029000000000209037500000084017000390000000000210376000000a401700039000000000320004c0000147a0000613d000000000300001900000000043100190000002003300039000000000593001900000000050503750000000000540376000000000423004b000014730000413d00000000012100190000000000010376000000000300035500000003010000290000070b01100197000000040410008c000014880000c13d0000000001000356000000070110008a00000020011000c9000700000000001d00000764020000410000000002020375000014b90000013d000100000008001d000300000006001d000000200330021000000762033001970000001f022000390000077d02200197000000a4022000390000077e02200197000000000223019f0000004002200210000200000007001d0000070703700197000000000232019f0000000003000356000000060330008a00000020033000c915261b780000034f000000060200002900000707012001970000000103000029000000050330024f0000004002200270000007070220019700000000040000190000000207000029000000050540021000000000065700190000000005510019000000000505037800000000005603760000000105400039000000000445004b00000000040000190000000104004039000000010440018f000000000440004c0000000004050019000014a10000c13d00000763040000410000000000140376000007640100004100000000002103760000000001000356000000040110008a00000020011000c9000400000000001d000000000330004c0000000306000029000014e90000613d000000200320008c00000020020080390000001f03200039000000600430018f0000000003740019000000000443004b00000000040000190000000104004039000007070530009c000014de0000213d000000010440018f000000000440004c000014de0000c13d000000000036037600000747030000410000001f0420008c000000000400001900000000040320190000074702200197000000000520004c0000000003008019000007470220009c00000000020400190000000002036019000000000220004c000014e50000613d00000000020703750000077503200197000000000332004b000014e70000c13d000000200110011a000000000102001f0000077c0120009c000000000100001900000001010060390000000900000005000000000001036f00000717010000410000000000100376000000410100003900000004020000390000000000120376000007180100004100001bfe00010372000000000100001900001bfe00010372000000000100001900001bfe000103720000006001000039000000000320004c0000152b0000613d000000030100002900000000010103750000003f0320003900000765033001970000000003310019000000000413004b00000000040000190000000104004039000007070530009c0000151f0000213d000000010440018f000000000440004c0000151f0000c13d000000030400002900000000003403760000000000210376000000200210003900000763030000410000000003030375000007640400004100000000050403750000001f0450018f0000000506500270000000000760004c0000150e0000613d0000000007000019000000050870021000000000098200190000000008830019000000000808037800000000008903760000000107700039000000000867004b000015060000413d000000000640004c0000152b0000613d000000200600008a000000000565016f000000000353001900000000025200190000000304400210000000000502037500000000054501cf000000000545022f00000000030303780000010004400089000000000343022f00000000034301cf000000000353019f00000000003203760000152b0000013d00000717010000410000000000100376000000410100003900000004020000390000000000120376000007180100004100001bfe00010372000007630100004100000000000103760000076401000041000000000001037600000060010000390000000002010375000000000320004c0000153c0000c13d00000003010000290000000002010375000300000002001d0000071101000041000000000012037600000004012000391bfc14360000034f00000003020000290000000001210049000000400110021000000719011001970000070702200197000000000121019f00001bfe000103720000002001100039000007070110019700000040022002100000071902200197000000000112019f00001bfe00010372000000000301037500000000003203760000002002200039000000000430004c0000154f0000613d000000000400001900000000052400190000002004400039000000000614001900000000060603750000000000650376000000000534004b000015480000413d000000000123001900000000000103760000001f01300039000000200300008a000000000131016f0000000001120019000000000001036f000000040220008a00000747030000410000005f0420008c000000000400001900000000040320190000074702200197000000000520004c0000000003008019000007470220009c00000000020400190000000002036019000000000220004c000015790000613d0000070102000041000000000202037500000004022000390000000002020377000007480320009c0000157b0000813d000000200310011a000000000302001f0000070102000041000000000202037500000024022000390000000002020377000007480320009c0000157d0000813d000000200310011a000100000302001f0000070102000041000000000202037500000044022000390000000002020377000200000302001f000000000001036f000000000100001900001bfe00010372000000000100001900001bfe00010372000000000100001900001bfe00010372000000210200008a000000000221004b000015880000213d0000002001100039000007040210009c000015880000813d00000040020000390000000000120376000000000001036f00000717010000410000000000100376000000410100003900000004020000390000000000120376000007180100004100001bfe000103720000001f02200039000000200300008a000000000232016f0000000001120019000000000221004b00000000020000190000000102004039000007070310009c0000159e0000213d000000010220018f000000000220004c0000159e0000c13d00000040020000390000000000120376000000000001036f00000717010000410000000000100376000000410100003900000004020000390000000000120376000007180100004100001bfe0001037200030000000000020000000008020019000007040280009c000015f00000813d0000003f04800039000000200200008a000000000524016f000000400400003900000000090403750000000005590019000000000695004b00000000060000190000000106004039000007070750009c000015f70000213d000000010660018f000000000660004c000015f70000c13d000000000054037600000000008903760000000004180019000000000334004b000015fe0000213d000000200a90003900000702030000410000000003030375000000000313004b000015cc0000c13d00000000010a001900000000020000190000000003080019000300000008001d000200000009001d00010000000a001d1bfc1bed0000034f000000010a00002900000002090000290000000308000029000015eb0000013d0000070103000041000000000303037500000000031300190000001f0180018f0000000504800270000000000540004c000015dc0000613d0000000005000019000000050650021000000000076a00190000000006630019000000000606037700000000006703760000000105500039000000000645004b000015d40000413d000000000410004c000015eb0000613d000000000228016f000000000323001900000000022a00190000000301100210000000000402037500000000041401cf000000000414022f00000000030303770000010001100089000000000313022f00000000011301cf000000000141019f000000000012037600000000018a0019000000000001037600000000010900190000000300000005000000000001036f00000717010000410000000000100376000000410100003900000004020000390000000000120376000007180100004100001bfe0001037200000717010000410000000000100376000000410100003900000004020000390000000000120376000007180100004100001bfe00010372000000000100001900001bfe0001037200000006010000391bfc1be20000034f0000070b011001970000000002000351000000000121004b000016070000c13d000000000001036f000000400100003900000000010103750000004402100039000007490300004100000000003203760000071102000041000000000021037600000024021000390000002003000039000000000032037600000004021000390000000000320376000007070110019700000712011001c700001bfe000103720003000000000002000000000010037600000002010000390000002002000039000100000002001d000000000012037600008010010000390000070f020000410000000003000356000000030330008a00000020033000c91bfc1bac0000034f00000003020000290000070701200197000000ff03000039000000020330024f000000010330008c0000162f0000c13d00000000010103781bfc1be20000034f0000070b01100197000000000210004c0000164d0000613d0000000300000005000000000001036f000000400220027000000708032001970000001f0420018f00000707022001970000000505200270000000000650004c0000163e0000613d000000000600001900000005076002100000000008710019000000000808037800000000008703760000000106600039000000000756004b000016370000413d000000000540004c0000164b0000613d0000000304400210000000000503037500000000054501cf000000000545022f000000000131001900000000010103780000010004400089000000000141022f00000000014101cf000000000151019f0000000000130376000000400120021000001bfe000103720000004001000039000000000101037500000044021000390000077103000041000000000032037600000024021000390000001803000039000000000032037600000711020000410000000000210376000000040210003900000001030000290000000000320376000007070110019700000712011001c700001bfe000103720007000000000002000200000001001d000000000010037600000002010000390000002002000039000300000002001d000000000012037600008010010000390000070f020000410000000003000356000000070330008a00000020033000c91bfc1bac0000034f00000007020000290000070701200197000000ff03000039000100000003001d000000060330024f000000000330004c0000168c0000613d00000000010103781bfc1be20000034f0000070b01100197000000000110004c000016aa0000613d0000000201000029000000000010037600000004010000390000000302000029000000000012037600008010010000390000070f020000410000000003000356000000050330008a00000020033000c91bfc1bac0000034f000000050200002900000707012001970000000103000029000000040330024f000000010330008c000016ba0000c13d00000000010103781bfc1be20000034f0000070b011001970000000700000005000000000001036f000000400220027000000708032001970000001f0420018f00000707022001970000000505200270000000000650004c0000169b0000613d000000000600001900000005076002100000000008710019000000000808037800000000008703760000000106600039000000000756004b000016940000413d000000000540004c000016a80000613d0000000304400210000000000503037500000000054501cf000000000545022f000000000131001900000000010103780000010004400089000000000141022f00000000014101cf000000000151019f0000000000130376000000400120021000001bfe000103720000004001000039000000000101037500000044021000390000077103000041000000000032037600000024021000390000001803000039000000000032037600000711020000410000000000210376000000040210003900000003030000290000000000320376000007070110019700000712011001c700001bfe00010372000000400220027000000708032001970000001f0420018f00000707022001970000000505200270000000000650004c000016c90000613d000000000600001900000005076002100000000008710019000000000808037800000000008703760000000106600039000000000756004b000016c20000413d000000000540004c000016d60000613d0000000304400210000000000503037500000000054501cf000000000545022f000000000131001900000000010103780000010004400089000000000141022f00000000014101cf000000000151019f0000000000130376000000400120021000001bfe00010372000000000110004c000016db0000613d000000000001036f0000004001000039000000000101037500000064021000390000077f03000041000000000032037600000044021000390000078003000041000000000032037600000024021000390000002d0300003900000000003203760000071102000041000000000021037600000004021000390000002003000039000000000032037600000707011001970000074c011001c700001bfe0001037200000060021000390000077a03000041000000000032037600000040021000390000077b030000410000000000320376000000200210003900000032030000390000000000320376000000200200003900000000002103760000008001100039000000000001036f0001000000000002000000000110004c000017000000613d0000000100000005000000000001036f00000040010000390000000002010375000100000002001d0000071101000041000000000012037600000004012000391bfc16ee0000034f00000001020000290000000001210049000000400110021000000719011001970000070702200197000000000121019f00001bfe00010372000a000000000002000300000001001d000100000002001d000000000020037600000002010000390000002002000039000400000002001d000000000012037600008010010000390000070f0200004100000000030003560000000a0330008a00000020033000c91bfc1bac0000034f0000000a020000290000070701200197000000ff03000039000200000003001d000000090330024f000000010330008c0000175e0000c13d00000000010103781bfc1be20000034f0000070b02100197000000000120004c0000177c0000613d000000010100003900000003030000290000070b03300197000300000003001d000000000323004b0000000404000029000017540000613d00000000002003760000000501000039000000000014037600008010010000390000070f020000410000000003000356000000080330008a00000020033000c91bfc1bac0000034f000000080200002900000707012001970000000203000029000000070330024f000000000330004c0000178c0000613d0000000001010378000000030200002900000000002003760000000402000029000000000012037600008010010000390000070f020000410000000003000356000000060330008a00000020033000c91bfc1bac0000034f000000060200002900000707012001970000000203000029000000050330024f000000000330004c000017aa0000613d00000000010103781bfc1be20000034f000000ff0110018f000000000210004c000017560000613d0000000a00000005000000000001036f00000001010000291bfc165d0000034f0000070b011001970000000302000029000000000121004b00000000010000190000000101006039000017540000013d000000400220027000000708032001970000001f0420018f00000707022001970000000505200270000000000650004c0000176d0000613d000000000600001900000005076002100000000008710019000000000808037800000000008703760000000106600039000000000756004b000017660000413d000000000540004c0000177a0000613d0000000304400210000000000503037500000000054501cf000000000545022f000000000131001900000000010103780000010004400089000000000141022f00000000014101cf000000000151019f0000000000130376000000400120021000001bfe000103720000004001000039000000000101037500000044021000390000077103000041000000000032037600000024021000390000001803000039000000000032037600000711020000410000000000210376000000040210003900000004030000290000000000320376000007070110019700000712011001c700001bfe00010372000000400220027000000708032001970000001f0420018f00000707022001970000000505200270000000000650004c0000179b0000613d000000000600001900000005076002100000000008710019000000000808037800000000008703760000000106600039000000000756004b000017940000413d000000000540004c000017a80000613d0000000304400210000000000503037500000000054501cf000000000545022f000000000131001900000000010103780000010004400089000000000141022f00000000014101cf000000000151019f0000000000130376000000400120021000001bfe00010372000000400220027000000708032001970000001f0420018f00000707022001970000000505200270000000000650004c000017b90000613d000000000600001900000005076002100000000008710019000000000808037800000000008703760000000106600039000000000756004b000017b20000413d000000000540004c000017c60000613d0000000304400210000000000503037500000000054501cf000000000545022f000000000131001900000000010103780000010004400089000000000141022f00000000014101cf000000000151019f0000000000130376000000400120021000001bfe000103720012000000000002000400000002001d000500000001001d000600000003001d000000000030037600000002020000390000002001000039000700000001001d000300000002001d000000000021037600008010010000390000070f020000410000000003000356000000120330008a00000020033000c91bfc1bac0000034f00000012020000290000070701200197000000ff03000039000800000003001d000000110330024f000000010330008c0000186d0000c13d00000000010103781bfc1be20000034f0000070b03100197000000000130004c0000188b0000613d00000005010000290000070b01100197000000000113004b000000070400002900000006020000290000189b0000c13d000500000003001d00000004010000290000070b01100197000400000001001d000000000110004c000018ad0000613d00000000002003760000000301000029000000000014037600008010010000390000070f020000410000000003000356000000120330008a00000020033000c91bfc1bac0000034f000000120200002900000707012001970000000803000029000000110330024f000000010330008c000018bf0000c13d00000000010103781bfc1be20000034f0000070b01100197000000000210004c000018dd0000613d0000000502000029000000000121004b00000007040000290000000601000029000018ed0000c13d00000000001003760000000401000039000100000001001d000000000014037600008010010000390000070f020000410000000003000356000000100330008a00000020033000c91bfc1bac0000034f0000001002000029000007070120019700000008030000290000000f0330024f000000010330008c000018ff0000c13d0000000001010378000200000001001d1bfc1be20000034f000007090110019700000002020000291bfc1be00000034f0000000501000029000000000010037600000003010000390000000702000029000000000012037600008010010000390000070f0200004100000000030003560000000e0330008a00000020033000c91bfc1bac0000034f0000000e02000029000007070120019700000008030000290000000d0330024f000000000330004c0000191d0000613d0000000001010378000200000001001d1bfc1be20000034f000000010110008a00000002020000291bfc1be00000034f0000000401000029000000000010037600008010010000390000070f0200004100000000030003560000000c0330008a00000020033000c91bfc1bac0000034f0000000c02000029000007070120019700000008030000290000000b0330024f000000000330004c0000193b0000613d0000000001010378000200000001001d1bfc1be20000034f000000010110003900000002020000291bfc1be00000034f0000000601000029000000000010037600000007010000290000000302000029000000000021037600008010010000390000070f0200004100000000030003560000000a0330008a00000020033000c91bfc1bac0000034f0000000a0200002900000707012001970000000803000029000000090330024f000000000330004c000019590000613d0000000001010378000800000001001d1bfc1be20000034f00000709011001970000000402000029000000000121019f00000008020000291bfc1be00000034f00000713010000410000000102000029000000000012036000000005010000290000000402000029000000000021035f0000000601000029000000000001035f0000001200000005000000000001036f000000400220027000000708032001970000001f0420018f00000707022001970000000505200270000000000650004c0000187c0000613d000000000600001900000005076002100000000008710019000000000808037800000000008703760000000106600039000000000756004b000018750000413d000000000540004c000018890000613d0000000304400210000000000503037500000000054501cf000000000545022f000000000131001900000000010103780000010004400089000000000141022f00000000014101cf000000000151019f0000000000130376000000400120021000001bfe000103720000004001000039000000000101037500000044021000390000077103000041000000000032037600000024021000390000001803000039000000000032037600000711020000410000000000210376000000040210003900000007030000290000000000320376000007070110019700000712011001c700001bfe0001037200000040010000390000000001010375000000640210003900000781030000410000000000320376000000440210003900000782030000410000000000320376000000240210003900000025030000390000000000320376000007110200004100000000002103760000000402100039000000000042037600000707011001970000074c011001c700001bfe0001037200000040010000390000000001010375000000640210003900000783030000410000000000320376000000440210003900000784030000410000000000320376000000240210003900000024030000390000000000320376000007110200004100000000002103760000000402100039000000000042037600000707011001970000074c011001c700001bfe00010372000000400220027000000708032001970000001f0420018f00000707022001970000000505200270000000000650004c000018ce0000613d000000000600001900000005076002100000000008710019000000000808037800000000008703760000000106600039000000000756004b000018c70000413d000000000540004c000018db0000613d0000000304400210000000000503037500000000054501cf000000000545022f000000000131001900000000010103780000010004400089000000000141022f00000000014101cf000000000151019f0000000000130376000000400120021000001bfe000103720000004001000039000000000101037500000044021000390000077103000041000000000032037600000024021000390000001803000039000000000032037600000711020000410000000000210376000000040210003900000007030000290000000000320376000007070110019700000712011001c700001bfe0001037200000040010000390000000001010375000000640210003900000781030000410000000000320376000000440210003900000782030000410000000000320376000000240210003900000025030000390000000000320376000007110200004100000000002103760000000402100039000000000042037600000707011001970000074c011001c700001bfe00010372000000400220027000000708032001970000001f0420018f00000707022001970000000505200270000000000650004c0000190e0000613d000000000600001900000005076002100000000008710019000000000808037800000000008703760000000106600039000000000756004b000019070000413d000000000540004c0000191b0000613d0000000304400210000000000503037500000000054501cf000000000545022f000000000131001900000000010103780000010004400089000000000141022f00000000014101cf000000000151019f0000000000130376000000400120021000001bfe00010372000000400220027000000708032001970000001f0420018f00000707022001970000000505200270000000000650004c0000192c0000613d000000000600001900000005076002100000000008710019000000000808037800000000008703760000000106600039000000000756004b000019250000413d000000000540004c000019390000613d0000000304400210000000000503037500000000054501cf000000000545022f000000000131001900000000010103780000010004400089000000000141022f00000000014101cf000000000151019f0000000000130376000000400120021000001bfe00010372000000400220027000000708032001970000001f0420018f00000707022001970000000505200270000000000650004c0000194a0000613d000000000600001900000005076002100000000008710019000000000808037800000000008703760000000106600039000000000756004b000019430000413d000000000540004c000019570000613d0000000304400210000000000503037500000000054501cf000000000545022f000000000131001900000000010103780000010004400089000000000141022f00000000014101cf000000000151019f0000000000130376000000400120021000001bfe00010372000000400220027000000708032001970000001f0420018f00000707022001970000000505200270000000000650004c000019680000613d000000000600001900000005076002100000000008710019000000000808037800000000008703760000000106600039000000000756004b000019610000413d000000000540004c000019750000613d0000000304400210000000000503037500000000054501cf000000000545022f000000000131001900000000010103780000010004400089000000000141022f00000000014101cf000000000151019f0000000000130376000000400120021000001bfe000103720009000000000002000300000003001d000100000002001d0000071b030000410000071c0200004100000000003203760000071d02000041000200000001001d000000000012037600008002010000390000071e020000410000000003000356000000090330008a00000020033000c91bfc1bac0000034f0000000101000039000000ff0a0000390000000802a0024f000000000220004c00001a100000613d0000070702000041000000090220017f0000000002020378000000000220004c00001a100000613d000000400800003900000000090803750000006401900039000000800200003900000000002103760000004401900039000000010200002900000000002103760000077c010000410000000000190376000000040190003900000000020003510000000000210376000000240190003900000000000103760000000003000355000000030b00002900000000020b03750000008401900039000000000021037600000002010000290000070b01100197000000a404900039000000000520004c000019b10000613d0000000005000019000000000645001900000020055000390000000007b5001900000000070703750000000000760376000000000625004b000019aa0000413d00000000044200190000000000040376000000040410008c000019bc0000c13d0000000001000356000000070110008a00000020011000c9000700000000001d00000764020000410000000002020375000019ed0000013d00010000000a001d000300000008001d000000200330021000000762033001970000001f022000390000077d02200197000000a4022000390000077e02200197000000000232019f0000004002200210000200000009001d0000070703900197000000000232019f0000000003000356000000060330008a00000020033000c91a5a1b780000034f000000060200002900000707012001970000000103000029000000050330024f0000004002200270000007070220019700000000040000190000000209000029000000050540021000000000065900190000000005510019000000000505037800000000005603760000000105400039000000000445004b00000000040000190000000104004039000000010440018f000000000440004c0000000004050019000019d50000c13d00000763040000410000000000140376000007640100004100000000002103760000000001000356000000040110008a00000020011000c9000400000000001d000000000330004c000000030800002900001a1d0000613d000000200320008c00000020020080390000001f03200039000000600430018f0000000003940019000000000443004b00000000040000190000000104004039000007070530009c00001a120000213d000000010440018f000000000440004c00001a120000c13d000000000038037600000747030000410000001f0420008c000000000400001900000000040320190000074702200197000000000520004c0000000003008019000007470220009c00000000020400190000000002036019000000000220004c00001a190000613d00000000020903750000077503200197000000000332004b00001a1b0000c13d000000200110011a000000000102001f0000077c0120009c000000000100001900000001010060390000000900000005000000000001036f00000717010000410000000000100376000000410100003900000004020000390000000000120376000007180100004100001bfe00010372000000000100001900001bfe00010372000000000100001900001bfe000103720000006001000039000000000320004c00001a5f0000613d000000030100002900000000010103750000003f0320003900000765033001970000000003310019000000000413004b00000000040000190000000104004039000007070530009c00001a530000213d000000010440018f000000000440004c00001a530000c13d000000030400002900000000003403760000000000210376000000200210003900000763030000410000000003030375000007640400004100000000050403750000001f0450018f0000000506500270000000000760004c00001a420000613d0000000007000019000000050870021000000000098200190000000008830019000000000808037800000000008903760000000107700039000000000867004b00001a3a0000413d000000000640004c00001a5f0000613d000000200600008a000000000565016f000000000353001900000000025200190000000304400210000000000502037500000000054501cf000000000545022f00000000030303780000010004400089000000000343022f00000000034301cf000000000353019f000000000032037600001a5f0000013d00000717010000410000000000100376000000410100003900000004020000390000000000120376000007180100004100001bfe00010372000007630100004100000000000103760000076401000041000000000001037600000060010000390000000002010375000000000320004c00001a700000c13d00000003010000290000000002010375000300000002001d0000071101000041000000000012037600000004012000391bfc16ee0000034f00000003020000290000000001210049000000400110021000000719011001970000070702200197000000000121019f00001bfe000103720000002001100039000007070110019700000040022002100000071902200197000000000112019f00001bfe00010372000a000000000002000400000004001d000200000003001d000100000001001d0000071b010000410000071c0300004100000000001303760000071d01000041000300000002001d000000000021037600008002010000390000071e0200004100000000030003560000000a0330008a00000020033000c91bfc1bac0000034f0000000101000039000000ff0a0000390000000902a0024f000000000220004c00001b120000613d00000707020000410000000a0220017f0000000002020378000000000220004c00001b120000613d0000004008000039000000000908037500000064019000390000008002000039000000000021037600000044019000390000000202000029000000000021037600000001010000290000070b01100197000000240290003900000000001203760000077c0100004100000000001903760000000401900039000000000200035100000000002103760000000003000355000000040b00002900000000020b03750000008401900039000000000021037600000003010000290000070b01100197000000a404900039000000000520004c00001ab30000613d0000000005000019000000000645001900000020055000390000000007b5001900000000070703750000000000760376000000000625004b00001aac0000413d00000000044200190000000000040376000000040410008c00001abe0000c13d0000000001000356000000080110008a00000020011000c9000800000000001d0000076402000041000000000202037500001aef0000013d00020000000a001d000400000008001d000000200330021000000762033001970000001f022000390000077d02200197000000a4022000390000077e02200197000000000232019f0000004002200210000300000009001d0000070703900197000000000232019f0000000003000356000000070330008a00000020033000c91b5c1b780000034f000000070200002900000707012001970000000203000029000000060330024f0000004002200270000007070220019700000000040000190000000309000029000000050540021000000000065900190000000005510019000000000505037800000000005603760000000105400039000000000445004b00000000040000190000000104004039000000010440018f000000000440004c000000000405001900001ad70000c13d00000763040000410000000000140376000007640100004100000000002103760000000001000356000000050110008a00000020011000c9000500000000001d000000000330004c000000040800002900001b1f0000613d000000200320008c00000020020080390000001f03200039000000600430018f0000000003940019000000000443004b00000000040000190000000104004039000007070530009c00001b140000213d000000010440018f000000000440004c00001b140000c13d000000000038037600000747030000410000001f0420008c000000000400001900000000040320190000074702200197000000000520004c0000000003008019000007470220009c00000000020400190000000002036019000000000220004c00001b1b0000613d00000000020903750000077503200197000000000332004b00001b1d0000c13d000000200110011a000000000102001f0000077c0120009c000000000100001900000001010060390000000a00000005000000000001036f00000717010000410000000000100376000000410100003900000004020000390000000000120376000007180100004100001bfe00010372000000000100001900001bfe00010372000000000100001900001bfe000103720000006001000039000000000320004c00001b610000613d000000040100002900000000010103750000003f0320003900000765033001970000000003310019000000000413004b00000000040000190000000104004039000007070530009c00001b550000213d000000010440018f000000000440004c00001b550000c13d000000040400002900000000003403760000000000210376000000200210003900000763030000410000000003030375000007640400004100000000050403750000001f0450018f0000000506500270000000000760004c00001b440000613d0000000007000019000000050870021000000000098200190000000008830019000000000808037800000000008903760000000107700039000000000867004b00001b3c0000413d000000000640004c00001b610000613d000000200600008a000000000565016f000000000353001900000000025200190000000304400210000000000502037500000000054501cf000000000545022f00000000030303780000010004400089000000000343022f00000000034301cf000000000353019f000000000032037600001b610000013d00000717010000410000000000100376000000410100003900000004020000390000000000120376000007180100004100001bfe00010372000007630100004100000000000103760000076401000041000000000001037600000060010000390000000002010375000000000320004c00001b720000c13d00000004010000290000000002010375000400000002001d0000071101000041000000000012037600000004012000391bfc16ee0000034f00000004020000290000000001210049000000400110021000000719011001970000070702200197000000000121019f00001bfe000103720000002001100039000007070110019700000040022002100000071902200197000000000112019f00001bfe000103720002000000000002000200000003001d0000002003300039000100000003001d00001b91002103630000000205000029000000200250011a000000000201001f0000000106000029000000202160011a000000000126004900000003022002100000010003200089000000200110011a000000010331025f000000000101003100000000042101cf000000000343019f000000000220004c000000000103c019000000200260011a00000747021001cd00000000010500190000000200000005000000000001036f0000000103000029000000020500002900000000020000190000000102004039000000010220018f000000000220004c00001bab0000c13d000000200250011a000000000201001f0000000006030019000000202160011a000000000126004900000003022002100000010003200089000000200110011a000000010331025f000000000101003100000000042101cf000000000343019f000000000220004c000000000103c019000000200260011a000007850210019d00000000010500190000000200000005000000000001036f00000000000103710002000000000002000200000003001d0000002003300039000100000003001d00001bc5002103650000000205000029000000200250011a000000000201001f0000000106000029000000202160011a000000000126004900000003022002100000010003200089000000200110011a000000010331025f000000000101003100000000042101cf000000000343019f000000000220004c000000000103c019000000200260011a00000747021001cd00000000010500190000000200000005000000000001036f0000000103000029000000020500002900000000020000190000000102004039000000010220018f000000000220004c00001bdf0000c13d000000200250011a000000000201001f0000000006030019000000202160011a000000000126004900000003022002100000010003200089000000200110011a000000010331025f000000000101003100000000042101cf000000000343019f000000000220004c000000000103c019000000200260011a000007850210019d00000000010500190000000200000005000000000001036f0000000000010371000000000012035b000000000001036f0000000001010359000000000001036f000000000401037500000000043401cf000000000434022f0000010003300089000000000232022f00000000023201cf000000000242019f0000000000210376000000000001036f0000000504300270000000000540004c00001bf50000613d00000000002103760000002001100039000000010440008a000000000540004c00001bf00000c13d0000001f0330018f000000000430004c00001bfb0000613d00000003033002101bfc1be40000034f000000000001036f000000000001036f00001bfc0000037400001bfd0001037000001bfe00010372000000000000e0010000000000000000000000000000000000000000000000000000000000ffffff0000000000000000000000000000000000000000000000000000000000ffffe00000000000000000000000000000000000000000000000000000000000ffffc051756573744e4654000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000051554553540000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000000ffffffffffffffff000000000000000000000000000000000000000000000000ffffffffffffffe0ffffffffffffffffffffffff00000000000000000000000000000000000000008be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0000000000000000000000000ffffffffffffffffffffffffffffffffffffffff2e6a736f6e00000000000000000000000000000000000000000000000000000a697066733a2f2f78787878787878787878787878787878787878787878787878787878782f00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004000000000000000004552433732313a20746f6b656e20616c7265616479206d696e7465640000000008c379a0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000640000000000000000ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef0000000000000000000000000000000000000000000000000000000000e000000000000000000000000000000000000000000000000000000000000000e000200000000000000000000000000000000000000000000000400000000000e000004e487b7100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000024000000000000000000000000000000000000000000000000ffffffffffffffff00000000000000004552433732313a206d696e7420746f20746865207a65726f20616464726573731806aa1896bbf26568e884a7374b41e002500962caba6a15023a8d90e8508b830000000000000000000000000000000000000000000000000000000000fff8000000000000000000000000000000000000000000000000000000000000fff8040000000000000000000000000000000000000000000000240000000000fff800000000000000000000000000000000000000000000000000000000001249c58b0000000000000000000000000000000000000000000000000000000091b7f5ec00000000000000000000000000000000000000000000000000000000c668286100000000000000000000000000000000000000000000000000000000db8d8dec00000000000000000000000000000000000000000000000000000000f2fde38a00000000000000000000000000000000000000000000000000000000f2fde38b00000000000000000000000000000000000000000000000000000000f47c84c500000000000000000000000000000000000000000000000000000000db8d8ded00000000000000000000000000000000000000000000000000000000e985e9c500000000000000000000000000000000000000000000000000000000c668286200000000000000000000000000000000000000000000000000000000c87b56dd00000000000000000000000000000000000000000000000000000000c9e4823300000000000000000000000000000000000000000000000000000000a035b1fd00000000000000000000000000000000000000000000000000000000a22cb46400000000000000000000000000000000000000000000000000000000a22cb46500000000000000000000000000000000000000000000000000000000b88d4fde00000000000000000000000000000000000000000000000000000000a035b1fe00000000000000000000000000000000000000000000000000000000a0bcfc7f0000000000000000000000000000000000000000000000000000000091b7f5ed0000000000000000000000000000000000000000000000000000000095d89b41000000000000000000000000000000000000000000000000000000009abc8320000000000000000000000000000000000000000000000000000000004c5302b70000000000000000000000000000000000000000000000000000000070a0823000000000000000000000000000000000000000000000000000000000853828b500000000000000000000000000000000000000000000000000000000853828b6000000000000000000000000000000000000000000000000000000008da5cb5b0000000000000000000000000000000000000000000000000000000070a0823100000000000000000000000000000000000000000000000000000000715018a6000000000000000000000000000000000000000000000000000000004c5302b800000000000000000000000000000000000000000000000000000000564566a8000000000000000000000000000000000000000000000000000000006352211e00000000000000000000000000000000000000000000000000000000095ea7b20000000000000000000000000000000000000000000000000000000023b872dc0000000000000000000000000000000000000000000000000000000023b872dd0000000000000000000000000000000000000000000000000000000042842e0e00000000000000000000000000000000000000000000000000000000095ea7b30000000000000000000000000000000000000000000000000000000018160ddd0000000000000000000000000000000000000000000000000000000001ffc9a70000000000000000000000000000000000000000000000000000000006fdde0300000000000000000000000000000000000000000000000000000000081812fc800000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000004f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657264647265737300000000000000000000000000000000000000000000000000004f776e61626c653a206e6577206f776e657220697320746865207a65726f206100000000000000000000000000000000000000000000008400000000000000000175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db90000000000184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000000000000000000000000000000000000000004ee2d6d415b85acef8100000000000000000000000000000000000000000000000000000000002386f26fc1000000000000000000000000000000000000ffffffffffffffffffffffffffffffff0000000000000000000000000000000000000000000000000000000005f5e10000000000000000000000000000000000000000000000000000000000ffffffff303132333435363738396162636465660000000000000000000000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdf6966c971051c3d54ec59162606531493a51404a002842f56009d7e5cf4a8c76e6578697374656e7420746f6b656e00000000000000000000000000000000004552433732314d657461646174613a2055524920717565727920666f72206e6f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3100000000000000000000000000000000000000000000000000000020000000034552433732313a20617070726f766520746f2063616c6c657200000000000000b10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf670a08231b98ef4ca268c9cc3f6b4590e4bfec28280db06bb5d45e689f2a360be03a83a83a83a83a83a83a83a83a83a83a83a83a83a83a83a83a83a83a83a83a90000000000000000000000007ceb3caf7ca83d837f9d04c59f41a92c1dc71c7d000000000000000000000000000000000000000000000000000000000007fffb000000000000000000000000000000000000000000000000000000000007fffa000000000000000000000000000000000000000000000000ffffffff000000000000000000000000000000000000000000000000000000000000000000ffffa00000000000000000000000000000000000000000000000000000000000ffff80000000000000000000000000000000000000000000000001ffffffffffffffe05472616e73666572206661696c65642e000000000000000000000000000000006c6964206f776e657200000000000000000000000000000000000000000000004552433732313a2061646472657373207a65726f206973206e6f7420612076616e00000000000000000000000000000000000000000000000000000000000000596f7520616c72656164792068617665207468697320717565737420746f6b65496e73756666696369656e742066756e64732e000000000000000000000000004578636565647320746f74616c20737570706c792e00000000000000000000005468652073616c65206973207061757365642e000000000000000000000000006b656e206f776e6572206f7220617070726f76656420666f7220616c6c0000004552433732313a20617070726f76652063616c6c6572206973206e6f7420746f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9254552433732313a20696e76616c696420746f6b656e204944000000000000000072000000000000000000000000000000000000000000000000000000000000004552433732313a20617070726f76616c20746f2063757272656e74206f776e65290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563ffffffff0000000000000000000000000000000000000000000000000000000080ac58cd000000000000000000000000000000000000000000000000000000005b5e139f0000000000000000000000000000000000000000000000000000000001ffc9a700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020000000000000008063656976657220696d706c656d656e74657200000000000000000000000000004552433732313a207472616e7366657220746f206e6f6e204552433732315265150b7a020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffe000000000000000000000000000000000000000000000000000000000ffffffe472206f7220617070726f766564000000000000000000000000000000000000004552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e656f776e65720000000000000000000000000000000000000000000000000000004552433732313a207472616e736665722066726f6d20696e636f72726563742072657373000000000000000000000000000000000000000000000000000000004552433732313a207472616e7366657220746f20746865207a65726f206164647fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000000000000000000000000000000000000000000000000000000000000000"}},"factoryDependencies":{},"hash":"07877a5c01e202e6936fefd7cb00c13e32ae47563970299f33a095b1195f9fbc"}}}}}